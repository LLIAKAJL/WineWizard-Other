#---------------------------------------------------------------------------------------
#                                       FUNCTIONS                                       
#---------------------------------------------------------------------------------------

ww_ahk()
{
if ! ww_exists "$WW_TEMP/AutoHotkey.exe"
then
    ww_unzip "$WW_TEMP" "$WW_CACHE/ahk.zip" AutoHotkey.exe AU3_Spy.exe
    chmod +x "$WW_TEMP/AutoHotkey.exe"
fi
WW_CR=$(printf \\\\r)
cat <<_EOF_ | sed "s/\$/$WW_CR/" > "$WW_TEMP"/tmp.ahk
$@
_EOF_
ww_wine "$WW_TEMP_WIN\\AutoHotkey.exe" "$WW_TEMP_WIN\\tmp.ahk"
unset WW_CR
}

#---------------------------------------------------------------------------------------

ww_cabextract()
{
if test ! -x "$(which cabextract 2>/dev/null)"
then
    ww_die "Cannot find cabextract. Please install it (e.g. 'sudo apt-get install cabextract' or 'sudo yum install cabextract')."
fi
ww_try cabextract -q "$@"
}

#---------------------------------------------------------------------------------------

ww_cd()
{
ww_try cd "$@"
}

#---------------------------------------------------------------------------------------

ww_cd_repo()
{
ww_cd "$WW_CACHE"
}

#---------------------------------------------------------------------------------------

ww_cd_repo_wine()
{
ww_cd_repo
ww_wine "$@"
}

#---------------------------------------------------------------------------------------

ww_clear_temp()
{
test -d "$WW_WINDOWS"/Temp && rm -rf "$WW_WINDOWS"/Temp
test -d "$WW_TEMP" && rm -rf "$WW_TEMP"
mkdir -p "$WW_TEMP"
}

#---------------------------------------------------------------------------------------

ww_cp()
{
ww_try cp -f "$@"
}

#---------------------------------------------------------------------------------------

ww_create_prefix()
{
ww_download_winemenubuilder
wineboot -u
wineserver -w
cd "$WINEPREFIX"
mkdir ".documents"
cd "dosdevices/c:/users/$USER"
for f in *
do
    if [ -h "$f" ]
    then
        mkdir "$WINEPREFIX/.documents/$f"
        rm "$f"
        ln -s "../../../.documents/$f" "$f"
    fi
done
rm "$WW_SYSTEM32"/winemenubuilder.exe
ww_cp "$WW_CACHE"/winemenubuilder.exe "$WW_SYSTEM32"
rm "$WW_SYSTEM64"/winemenubuilder.exe
ww_cp "$WW_CACHE"/winemenubuilder64.exe "$WW_SYSTEM64"/winemenubuilder.exe
}

#---------------------------------------------------------------------------------------

ww_d3dx_helper()
{
dllname=$1
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x86*" "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F "$dllname.dll" "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x64*" "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F "$dllname.dll" "$x"
done
ww_override native $dllname
}

#---------------------------------------------------------------------------------------

ww_die()
{
ww_warn "$@"
exit 1
}

#---------------------------------------------------------------------------------------

ww_done()
{
ww_clear_temp
}

#---------------------------------------------------------------------------------------

ww_download()
{
local WW_SUM=$1
shift
local WW_OUT="$WW_CACHE"/$1
shift
if test -f "$WW_OUT"
then
    local WW_GOTSUM=$(ww_sha1sum "$WW_OUT" | sed 's/ .*//')
    test "$WW_SUM" = "$WW_GOTSUM" && return 0
fi
while test "$1" != ""
do
    WW_URL=$1
    shift
    WW_RE=$1
    shift
    wget --no-check-certificate "$WW_URL" -O "$WW_OUT" 2>&1
    WW_URL=''
    test -z "$WW_RE" || WW_URL=$(cat $WW_OUT | sed -n "s/$WW_RE/\1/p")
    test -z "$WW_URL" || wget -O "$WW_OUT" --no-check-certificate $WW_URL 2>&1
    if test -f "$WW_OUT"
    then
        local WW_GOTSUM=$(ww_sha1sum "$WW_OUT" | sed 's/ .*//')
        if [ "$WW_SUM" = "$WW_GOTSUM" ]
        then
            return 0
        fi
    fi
done
ww_die "Download error!"
}

#---------------------------------------------------------------------------------------

ww_droid_helper()
{
ww_cp "$WW_CACHE"/$1 "$WW_FONTS"
ww_register_font $1 "$2"
}

#---------------------------------------------------------------------------------------

ww_early_wine()
{
WINEDEBUG=-all wine "$@" 2> /dev/null | ( sed 's/.*1h.=//' | tr -d '\r' | grep -v "Module not found" || true)
}

#---------------------------------------------------------------------------------------

ww_exists()
{
test -f "$1"
}

#---------------------------------------------------------------------------------------

ww_fontfix()
{
if ww_exists /usr/share/fonts/truetype/arphic/ukai.ttf
then
    local gotsum=$(ww_sha1sum /usr/share/fonts/truetype/arphic/ukai.ttf)
    if [ "$gotsum"x = "96e1121f89953e5169d3e2e7811569148f573985"x ]
    then
        ww_die "Your installed ukai.ttf is known to be broken. Upgrade your ttf-arphic font package!"
    fi
fi
if ww_exists /usr/share/fonts/truetype/arphic/uming.ttf
then
    local gotsum=$(ww_sha1sum /usr/share/fonts/truetype/arphic/uming.ttf)
    if [ "$gotsum"x = "2a4f4a69e343c21c24d044b2cb19fd4f0decc82c"x ]
    then
        ww_die "Your installed uming.ttf is known to be broken. Upgrade your ttf-uming font package!"
    fi
fi
if xlsfonts 2>/dev/null | egrep -i "samyak.*oriya"
then
    ww_die "Please uninstall the Samyak/Oriya font, e.g. 'sudo dpkg -r ttf-oriya-fonts', then log out and log in again.  That font causes strange crashes in .net programs."
fi
}

#---------------------------------------------------------------------------------------

ww_info()
{
echo "------------------------------------------------------"
echo "$@"
echo "------------------------------------------------------"
}

#---------------------------------------------------------------------------------------

ww_init()
{
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
WW_CACHE="$XDG_CACHE_HOME/winewizard"
mkdir -p "$WW_CACHE"
WW_VMEMORY_SIZE=$(cat "$XDG_CONFIG_HOME/winewizard/settings.conf" | sed -n 's/^VideoMemorySize=//p')
if [ -z "$WW_VMEMORY_SIZE" ]
then
    WW_VMEMORY_SIZE="default"
fi
WW_SCR_W=$(cat "$XDG_CONFIG_HOME/winewizard/settings.conf" | sed -n 's/^ScreenWidth=//p')
WW_SCR_H=$(cat "$XDG_CONFIG_HOME/winewizard/settings.conf" | sed -n 's/^ScreenHeight=//p')
if [ -z "$WW_SCR_W" ] || [ -z "$WW_SCR_H" ]
then
    WW_SCREEN_RES=$(xrandr -q | awk -F'current' -F',' 'NR==1 {gsub("( |current)","");print $2}')
else
    WW_SCREEN_RES=$(echo "$WW_SCR_W"x"$WW_SCR_H")
fi
unset WW_SCR_W
unset WW_SCR_H
WW_C="$WINEPREFIX/dosdevices/c:"
WW_WINDOWS="$WW_C/windows"
WW_SYSTEM32="$WW_WINDOWS/syswow64"
WW_SYSTEM32_WIN="C:\\windows\\syswow64"
WW_SYSTEM64="$WW_WINDOWS/system32"
WW_SYSTEM64_WIN="C:\\windows\\system32"
ww_warn "You are using a 64-bit WINEPREFIX. If you encounter problems, please retest in a clean 32-bit WINEPREFIX before reporting a bug."
WW_PROGRAM_FILES="$WW_C/Program Files"
WW_PROGRAM_FILES_X86="$WW_PROGRAM_FILES (x86)"
WW_FONTS="$WW_WINDOWS/Fonts"
WW_TEMP="$WW_WINDOWS/temp"
WW_TEMP_WIN="C:\\windows\\temp"
WW_COMMON_FILES="$WW_PROGRAM_FILES/Common Files"
WW_UNATTENDED_DASH_Q="-q"
WW_UNATTENDED_SLASH_Q="/q"
WW_UNATTENDED_SLASH_QB="/qb"
WW_UNATTENDED_SLASH_QN="/qn"
WW_UNATTENDED_SLASH_QNT="/qnt"
WW_UNATTENDED_SLASH_QT="/qt"
WW_UNATTENDED_SLASH_QUIET="/quiet"
WW_UNATTENDED_SLASH_S="/S"
WW_UNATTENDED_DASH_SILENT="-silent"
WW_UNATTENDED_SLASH_SILENT="/silent"
WW_DX_FEB_PATH="$WW_CACHE"/directx9.feb2010.exe
WW_DX_JUN_PATH="$WW_CACHE"/directx9.jun2010.exe
}

#---------------------------------------------------------------------------------------

ww_install()
{
package=$1
if type ww_download_$package | grep -i function > /dev/null
then
   ww_download_$package
fi
if type ww_check_$package | grep -i function > /dev/null
then
   ww_check_$package && return
fi
ww_clear_temp
ww_info "Package installation: $package ..."
ww_install_$package
}

#---------------------------------------------------------------------------------------

ww_install_wine()
{
test -f "$WW_CACHE"/wslin64 && rm "$WW_CACHE"/wslin64
wget 'https://www.playonlinux.com/wine/binaries/linux-amd64.lst' -O "$WW_CACHE"/wslin64 2>&1
ww_download_wine
test -d "$WINEPREFIX" || mkdir "$WINEPREFIX"
ww_cd "$WINEPREFIX"
test -d "$WINEPREFIX"/.wine && rm -rf "$WINEPREFIX/.wine"
tar xvjf "$WW_CACHE/x64.$WW_WINE_VERSION.pol"
mv wineversion/* "$WINEPREFIX/.wine"
rm -rf files
rm -rf playonlinux
rm -rf wineversion
}

#---------------------------------------------------------------------------------------

ww_killall()
{
kill -s KILL $(pgrep $1)
}

#---------------------------------------------------------------------------------------

ww_mv()
{
ww_try mv "$@"
}

#---------------------------------------------------------------------------------------

ww_native()
{
ww_exists "$1" && ! grep -q "Wine placeholder DLL" "$1"
}

#---------------------------------------------------------------------------------------

ww_override()
{
mode=$1
shift
echo "Using $mode override for following DLLs: $*"
cat > "$WW_TEMP"/override-dll.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\DllOverrides]
_EOF_
ww_override_helper "$@"
unset mode
}

#---------------------------------------------------------------------------------------

ww_override_app()
{
app=$1
shift
mode=$1
shift
echo Using $mode override for following DLLs when running $app: $@
(
    echo REGEDIT4
    echo ""
    echo "[HKEY_CURRENT_USER\\Software\\Wine\\AppDefaults\\$app\\DllOverrides]"
) > "$WW_TEMP"/override-dll.reg
ww_override_helper "$@"
unset app mode
}

#---------------------------------------------------------------------------------------

ww_override_helper()
{
case $mode in
    native,builtin) mode='"native,builtin"' ;;
    native)         mode='"native"' ;;
    builtin)        mode='"builtin"' ;;
    default)        mode=- ;;
    disabled)       mode='""' ;;
    *) ww_die "Bug: unknown override $mode. (want native, builtin, default, or disabled)." ;;
esac
while test "$1" != ""
do
    [ "$1" = comctl32 ] && rm -rf "$WW_WINDOWS"/winsxs/manifests/x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.2600.2982_none_deadbeef.manifest
    echo "\"*$1\"=$mode" >> "$WW_TEMP"/override-dll.reg
    shift
done
ww_regedit "$WW_TEMP_WIN"\\override-dll.reg
rm "$WW_TEMP"/override-dll.reg
}

#---------------------------------------------------------------------------------------

ww_regedit()
{
ww_try ww_early_wine regedit $WW_UNATTENDED_SLASH_S "$@"
}

#---------------------------------------------------------------------------------------

ww_register_font()
{
file=$1
shift
font=$1
case "$file" in
    *.TTF|*.ttf) font="$font (TrueType)";;
esac
cat > "$WW_TEMP"/_register-font.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Fonts]
"$font"="$file"
_EOF_
ww_regedit "$WW_TEMP_WIN"\\_register-font.reg
cat > "$WW_TEMP"/_register-font.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Fonts]
"$font"="$file"
_EOF_
ww_regedit "$WW_TEMP_WIN"\\_register-font.reg
}

#---------------------------------------------------------------------------------------

ww_register_font_replacement()
{
_ww_alias=$1
shift
_ww_font=$1
cat > "$WW_TEMP"/_register-font-replacements.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Fonts\Replacements]
"$_ww_alias"="$_ww_font"
_EOF_
ww_regedit "$WW_TEMP_WIN"\\_register-font-replacements.reg
unset _ww_alias _ww_font
}

#---------------------------------------------------------------------------------------

ww_regsvr()
{
ww_wine regsvr32 $WW_UNATTENDED_SLASH_S "$@"
}

#---------------------------------------------------------------------------------------

ww_remove_mono()
{
mono_uuid="$(wine uninstaller --list | grep Mono | cut -f1 -d\|)"
if test "$mono_uuid"
then
    wine uninstaller --remove "$mono_uuid"
else
    ww_warn "Mono does not appear to be installed."
fi
}

#---------------------------------------------------------------------------------------

ww_setup()
{
if [ -d "$WW_WORK_DIR" ]
then
    cd "$WW_WORK_DIR"
fi
echo "$WW_ARGS" | xargs wine start /Unix "$WW_EXE"
wineserver -w
}

#---------------------------------------------------------------------------------------

ww_set_fontsmooth()
{
case $1 in
    disable)   FontSmoothing=0; FontSmoothingOrientation=1; FontSmoothingType=0;;
    gray|grey) FontSmoothing=2; FontSmoothingOrientation=1; FontSmoothingType=1;;
    bgr)       FontSmoothing=2; FontSmoothingOrientation=0; FontSmoothingType=2;;
    rgb)       FontSmoothing=2; FontSmoothingOrientation=1; FontSmoothingType=2;;
    *) ww_die "unknown font smoothing type $1";;
esac
echo "Setting font smoothing to $1"
cat > "$WW_TEMP"/fontsmooth.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Control Panel\Desktop]
"FontSmoothing"="$FontSmoothing"
"FontSmoothingGamma"=dword:00000578
"FontSmoothingOrientation"=dword:0000000$FontSmoothingOrientation
"FontSmoothingType"=dword:0000000$FontSmoothingType

_EOF_
ww_regedit "$WW_TEMP_WIN"\\fontsmooth.reg
}

#---------------------------------------------------------------------------------------

ww_set_grabfullscreen()
{
case $1 in
    y|n) arg=$1;;
    *) ww_die "illegal value $1 for GrabFullscreen";;
esac
echo "Setting GrabFullscreen to $arg"
cat > "$WW_TEMP"/set-gfs.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\X11 Driver]
"GrabFullscreen"="$arg"

_EOF_
ww_regedit "$WW_TEMP_WIN"\\set-gfs.reg
}

#---------------------------------------------------------------------------------------

ww_set_hidewineexports()
{
case $1 in
    enable) local registry_value="\"Y\"" ;;
    disable) local registry_value="-" ;;
    *) ww_die "Unexpected argument, $arg";;
esac
cat > "$WW_TEMP"/set-wineexports.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine]
"HideWineExports"=$registry_value

_EOF_
ww_regedit "$WW_TEMP_WIN"\\set-wineexports.reg
}

#---------------------------------------------------------------------------------------

ww_set_mwo()
{
case $1 in
    enable*) arg=enabled;;
    disable*) arg=disable;;
    force) arg=force;;
    *) ww_die "illegal value $1 for MouseWarpOverride";;
esac
echo "Setting MouseWarpOverride to $arg"
cat > "$WW_TEMP"/set-mwo.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\DirectInput]
"MouseWarpOverride"="$arg"

_EOF_
ww_regedit "$WW_TEMP_WIN"\\set-mwo.reg
}

#---------------------------------------------------------------------------------------

ww_set_sound()
{
echo "Setting sound driver to $1"
cat > "$WW_TEMP"/set-sound.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Drivers]
"Audio"="$1"

_EOF_
ww_regedit "$WW_TEMP_WIN"\\set-sound.reg
}

#---------------------------------------------------------------------------------------

ww_set_videomemorysize()
{
size=$1
echo "Setting video memory size to $size"
case $size in
    default) cat > "$WW_TEMP"/set-video.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Direct3D]
"VideoMemorySize"=-

_EOF_
    ;;
    *) cat > "$WW_TEMP"/set-video.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Direct3D]
"VideoMemorySize"="$size"

_EOF_
esac
ww_regedit "$WW_TEMP_WIN"\\set-video.reg
}

#---------------------------------------------------------------------------------------

ww_set_virtual_desktop()
{
desktop=$1
case $desktop in
    off) cat > "$WW_TEMP"/vd.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Explorer]
"Desktop"=-
[HKEY_CURRENT_USER\Software\Wine\Explorer\Desktops]
"Default"=-

_EOF_
        ;;
    on) cat > "$WW_TEMP"/vd.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Explorer]
"Desktop"="Default"
[HKEY_CURRENT_USER\Software\Wine\Explorer\Desktops]
"Default"="$2"

_EOF_
        ;;
esac
ww_regedit "$WW_TEMP_WIN"\\vd.reg
}

#---------------------------------------------------------------------------------------

ww_set_windowmanagerdecorated()
{
case $1 in
    y|n) arg=$1;;
    *) ww_die "illegal value $1 for Decorated";;
esac
echo "Setting Decorated to $arg"
cat > "$WW_TEMP"/set-wmd.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\X11 Driver]
"Decorated"="$arg"

_EOF_
ww_regedit "$WW_TEMP_WIN"\\set-wmd.reg
}

#---------------------------------------------------------------------------------------

ww_set_windowmanagermanaged()
{
case $1 in
    y|n) arg=$1;;
    *) ww_die "illegal value $1 for Managed";;
esac
echo "Setting Managed to $arg"
cat > "$WW_TEMP"/set-wmm.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\X11 Driver]
"Managed"="$arg"

_EOF_
ww_regedit "$WW_TEMP_WIN\\set-wmm.reg"
}

#---------------------------------------------------------------------------------------

ww_set_wined3d_var()
{
case $2 in
    disable*) arg=disabled;;
    enable*)  arg=enabled;;
    hard*)    arg=hardware;;
    repack)   arg=repack;;
    backbuffer|fbo|gdi|none|opengl|readdraw|readtex|texdraw|textex|auto) arg=$2;;
    [0-9]*)   arg=$2;;
    *) ww_die "illegal value $2 for $1";;
esac
echo "Setting Direct3D/$1 to $arg"
cat > "$WW_TEMP"/set-wined3d.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\Direct3D]
"$1"="$arg"

_EOF_
ww_regedit "$WW_TEMP_WIN\\set-wined3d.reg"
}

#---------------------------------------------------------------------------------------

ww_set_winver()
{
(
    wine reg delete "HKLM\Software\Microsoft\Windows\CurrentVersion" /v SubVersionNumber /f || true
    wine reg delete "HKLM\Software\Microsoft\Windows\CurrentVersion" /v VersionNumber /f || true
    wine reg delete "HKLM\Software\Microsoft\Windows NT\CurrentVersion" /v CSDVersion /f || true
    wine reg delete "HKLM\Software\Microsoft\Windows NT\CurrentVersion" /v CurrentBuildNumber /f || true
    wine reg delete "HKLM\Software\Microsoft\Windows NT\CurrentVersion" /v CurrentVersion /f || true
    wine reg delete "HKLM\System\CurrentControlSet\Control\ProductOptions" /v ProductType /f || true
    wine reg delete "HKLM\System\CurrentControlSet\Control\ServiceCurrent" /v OS /f || true
    wine reg delete "HKLM\System\CurrentControlSet\Control\Windows" /v CSDVersion /f || true
    wine reg delete "HKCU\Software\Wine" /v Version /f || true
    wine reg delete "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /f || true
) > /dev/null 2>&1
    case $1 in
    win31)
        echo "Setting Windows version to $1"
        cat > "$WW_TEMP"/set-winver.reg <<_EOF_
REGEDIT4

[HKEY_USERS\S-1-5-4\Software\Wine]
"Version"="win31"

_EOF_
        ww_regedit "$WW_TEMP_WIN"\\set-winver.reg
        return
        ;;
    win95)
        echo "Setting Windows version to $1"
        cat > "$WW_TEMP"/set-winver.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion]
"ProductName"="Microsoft Windows 95"
"SubVersionNumber"=""
"VersionNumber"="4.0.950"

_EOF_
        ww_regedit "$WW_TEMP_WIN"\\set-winver.reg
        return
        ;;
    win98)
        echo "Setting Windows version to $1"
        cat > "$WW_TEMP"/set-winver.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion]
"ProductName"="Microsoft Windows 98"
"SubVersionNumber"=" A "
"VersionNumber"="4.10.2222"

_EOF_
        ww_regedit "$WW_TEMP_WIN"\\set-winver.reg
        return
        ;;
    nt40)
        echo "Setting Windows version to $1"
        cat > "$WW_TEMP"/set-winver.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion]
"CSDVersion"="Service Pack 6a"
"CurrentBuildNumber"="1381"
"CurrentVersion"="4.0"

[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\ProductOptions]
"ProductType"="WinNT"

[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\ServiceCurrent]
"OS"="Windows_NT"

[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Windows]
"CSDVersion"=dword:00000600

_EOF_
        ww_regedit "$WW_TEMP_WIN"\\set-winver.reg
        return
        ;;
    win2k)
        csdversion="Service Pack 4"
        currentbuildnumber="2195"
        currentversion="5.0"
        csdversion_hex=dword:00000400
        ;;
    winxp)
        csdversion="Service Pack 3"
        currentbuildnumber="2600"
        currentversion="5.1"
        csdversion_hex=dword:00000300
        ;;
    win2k3)
        csdversion="Service Pack 2"
        currentbuildnumber="3790"
        currentversion="5.2"
        csdversion_hex=dword:00000200
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "ServerNT" /f
        ;;
    vista)
        csdversion="Service Pack 2"
        currentbuildnumber="6002"
        currentversion="6.0"
        csdversion_hex=dword:00000200
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "WinNT" /f
        ;;
    win7)
        csdversion="Service Pack 1"
        currentbuildnumber="7601"
        currentversion="6.1"
        csdversion_hex=dword:00000100
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "WinNT" /f
        ;;
    win2k8)
        csdversion="Service Pack 1"
        currentbuildnumber="7601"
        currentversion="6.1"
        csdversion_hex=dword:00000100
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "ServerNT" /f
        ;;
    win8)
        csdversion=" "
        currentbuildnumber="9200"
        currentversion="6.2"
        csdversion_hex=dword:00000000
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "WinNT" /f
        ;;
    win81)
        csdversion=" "
        currentbuildnumber="9600"
        currentversion="6.3"
        csdversion_hex=dword:00000000
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "WinNT" /f
        ;;
    win10)
        csdversion=" "
        currentbuildnumber="10240"
        currentversion="10.0"
        csdversion_hex=dword:00000000
        wine reg add "HKLM\\System\\CurrentControlSet\\Control\\ProductOptions" /v ProductType /d "WinNT" /f
        ;;        
    *)
        ww_die "Invalid Windows version given."
        ;;
    esac
    echo "Setting Windows version to $1"
    cat > "$WW_TEMP"/set-winver.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion]
"CSDVersion"="$csdversion"
"CurrentBuildNumber"="$currentbuildnumber"
"CurrentVersion"="$currentversion"

[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Windows]
"CSDVersion"=$csdversion_hex

_EOF_
ww_regedit "$WW_TEMP_WIN"\\set-winver.reg
}

#---------------------------------------------------------------------------------------

ww_sha1sum()
{
local WW_FILE="$1"
if [ -x "$(which sha1sum 2>/dev/null)" ]
then
    sha1sum < "$WW_FILE" | sed 's/(stdin)= //;s/ .*//'
elif [ -x "$(which openssl 2>/dev/null)" ]
then
    openssl dgst -sha1 < "$WW_FILE" | sed 's/(stdin)= //;s/ .*//'
else
    ww_die "No sha1sum utility available."
fi
}

#---------------------------------------------------------------------------------------

ww_try()
{
export WINEDLLOVERRIDES
printf '%s\n' "Executing $*"
"$@"
status=$?
if test $status -ne 0
then
    ww_die "Note: command $* returned status $status.  Aborting."
fi
}

#---------------------------------------------------------------------------------------

ww_unset_winver()
{
ww_set_winver winxp
}

#---------------------------------------------------------------------------------------

ww_unzip()
{
destdir="$1"
zipfile="$2"
shift 2
if test -x "$(which unzip 2>/dev/null)"
then
    ww_try unzip -o -q -d"$destdir" "$zipfile" "$@"
else
    ww_die "Cannot find unzip. Please install it (e.g. 'sudo apt-get install unzip' or 'sudo yum install unzip')."
fi
unset destdir zipfile
}

#---------------------------------------------------------------------------------------

ww_vcrun6_helper()
{
if test ! -f "$WW_TEMP"/vcredist.exe
then
    ww_wine "$WW_CACHE"/vcrun6.exe "/T:$WW_TEMP_WIN" /c $WW_UNATTENDED_SLASH_Q
    ww_exists "$WW_TEMP"/vcredist.exe || ww_die vcredist.exe not found
fi
}

#---------------------------------------------------------------------------------------

ww_warn()
{
echo "------------------------------------------------------" >&2
echo "$@" >&2
echo "------------------------------------------------------" >&2
}

#---------------------------------------------------------------------------------------

ww_win2ksp4_helper()
{
filename=$1
ww_cabextract -d "$WW_TEMP" -L -F $filename "$WW_CACHE"/win2ksp4.exe
}

#---------------------------------------------------------------------------------------

ww_win7sp1_helper()
{
filename=$1
ww_cabextract -d "$WW_TEMP" -L -F $filename "$WW_CACHE"/win7sp1.exe
}

#---------------------------------------------------------------------------------------

ww_wine()
{
ww_try wine "$@"
}

#---------------------------------------------------------------------------------------

ww_wine_checksum()
{
test -f "$WW_CACHE"/wslin64 || ww_die "Wine checksum base doesn't found!"
cat "$WW_CACHE"/wslin64 | grep "$1;" | cut -d';' -f3-
}

#---------------------------------------------------------------------------------------

ww_wine_prepare_version()
{
case "$WW_WINE_VERSION" in
    1.4-*)     WW_WINE_VERSION="1.4.40"; export WW_WINE_VERSION;;
    1.4)       WW_WINE_VERSION="1.4.0";  export WW_WINE_VERSION;;
    1.6-*)     WW_WINE_VERSION="1.6.0";  export WW_WINE_VERSION;;
    1.6)       WW_WINE_VERSION="1.6.0";  export WW_WINE_VERSION;;
    1.8-*)     WW_WINE_VERSION="1.8.0";  export WW_WINE_VERSION;;
    1.8)       WW_WINE_VERSION="1.8.0";  export WW_WINE_VERSION;;
    1.9)       WW_WINE_VERSION="1.9.0";  export WW_WINE_VERSION;;
    1.9-*)     WW_WINE_VERSION="1.9.0";  export WW_WINE_VERSION;;
esac
WW_WINE_MINOR=$(echo $WW_WINE_VERSION | sed 's/1\.\([0-9]*\)\..*/\1/')
WW_WINE_MICRO=$(echo $WW_WINE_VERSION | sed 's/1.[0-9][0-9]*\.\([0-9]*\).*/\1/')
}

#---------------------------------------------------------------------------------------

ww_wine_version()
{
case $2 in
    1.3.*)     minor=3; micro=$(echo "$2" | sed 's/.*\.//');;
    1.4)       minor=4; micro=0;;
    1.4.*)     minor=4; micro=$(echo "$2" | sed 's/.*\.//');;
    1.5.*)     minor=5; micro=$(echo "$2" | sed 's/.*\.//');;
    1.6|1.6-*) minor=6; micro=0;;
    1.6.*)     minor=6; micro=$(echo "$2" | sed 's/.*\.//');;
    1.7.*)     minor=7; micro=$(echo "$2" | sed 's/.*\.//');;
    1.8|1.8-*) minor=8; micro=0;;
    1.8.*)     minor=8; micro=$(echo "$2" | sed 's/.*\.//');;
    1.9.*)     minor=9; micro=$(echo "$2" | sed 's/.*\.//');;
    *)         ww_die "Bug: unrecognized version $2";;
esac
if test "$WW_WINE_MINOR" = "$minor"
then
    test "$WW_WINE_MICRO" "$1" "$micro" || return 1
else
    test "$WW_WINE_MINOR" "$1" "$minor" || return 1
fi
}

#---------------------------------------------------------------------------------------

ww_wine_version_in()
{
for range
do
    val1=$(echo $range | sed 's/,.*//')
    val2=$(echo $range | sed 's/.*,//')
    case $range in
        ,*)                                ww_wine_version -le "$val2" && unset range val1 val2 && return 0;;
        *,) ww_wine_version -ge "$val1"                                && unset range val1 val2 && return 0;;
        *)  ww_wine_version -ge "$val1" && ww_wine_version -le "$val2" && unset range val1 val2 && return 0;;
    esac
done
unset range val1 val2
return 1
}

#---------------------------------------------------------------------------------------

ww_wm9codecs()
{
ww_set_winver win2k
ww_cd_repo_wine wm9codecs.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_workaround_wine_bug()
{
case "$2" in
    [0-9]*) ww_die "Bug: want message in ww_workaround_wine_bug arg 2, got $2" ;;
    "") _ww_msg="";;
    *)  _ww_msg="-- $2";;
esac
if test "$3" && ww_wine_version_in $3 $4 $5 $6
then
    echo Current wine does not have wine bug $1, so not applying workaround
    return 1
fi
ww_warn "Working around wine bug ${1} $_ww_msg"
return 0
}

#---------------------------------------------------------------------------------------

ww_xpsp3_helper()
{
filename=$1
ww_cabextract -d "$WW_TEMP" -L -F $filename "$WW_CACHE"/xpsp3.exe
}

#---------------------------------------------------------------------------------------
#                                       DOWNLOAD                                     
#---------------------------------------------------------------------------------------

ww_download_wine()
{
csum=$(ww_wine_checksum "$WW_WINE_VERSION")
rm "$WW_CACHE"/wslin64
ww_download $csum "x64.$WW_WINE_VERSION.pol" "https://www.playonlinux.com/wine/binaries/linux-amd64/PlayOnLinux-wine-$WW_WINE_VERSION-linux-amd64.pol" ''
}

#---------------------------------------------------------------------------------------

ww_download_winemenubuilder()
{
ww_download 76dd113ccf85803542c8c2fac421ea5a593e7404 'winemenubuilder.exe' 'https://github.com/LLIAKAJL/WineWizard-Utils/blob/master/winemenubuilder/winemenubuilder.exe?raw=true' ''
ww_download 3b3bdda009eed09fbb6dcac85b0bd618b16965f8 'winemenubuilder64.exe' 'https://github.com/LLIAKAJL/WineWizard-Utils/blob/master/winemenubuilder/winemenubuilder64.exe?raw=true' ''
}

#---------------------------------------------------------------------------------------

ww_download_dx_feb2010()
{
ww_download a97c820915dc20929e84b49646ec275760012a42 'directx9.feb2010.exe' 'http://download.microsoft.com/download/E/E/1/EE17FF74-6C45-4575-9CF4-7FC2597ACD18/directx_feb2010_redist.exe' ''
}

#---------------------------------------------------------------------------------------

ww_download_dx_jun2010()
{
ww_download f8f1217f666bf2f6863631a7d5e5fb3a8d1542df 'directx9.jun2010.exe' 'http://download.microsoft.com/download/8/4/A/84A35BF1-DAFE-4AE8-82AF-AD2AE20B6B14/directx_Jun2010_redist.exe' ''
}

#---------------------------------------------------------------------------------------

ww_download_ahk()
{
ww_download b3981b13fbc45823131f69d125992d6330212f27 'ahk.zip' 'http://www.autohotkey.com/download/AutoHotkey104805.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_win2ksp4()
{
ww_download fadea6d94a014b039839fecc6e6a11c20afa4fa8 'win2ksp4.exe' 'ftp://ftp.vcitynet.com/win32/win2k/W2KSP4_EN.EXE' '' 'http://download.microsoft.com/download/E/6/A/E6A04295-D2A8-40D0-A0C5-241BFECD095E/W2KSP4_EN.EXE' '' 'https://web.archive.org/web/20160129053851/http://download.microsoft.com/download/E/6/A/E6A04295-D2A8-40D0-A0C5-241BFECD095E/W2KSP4_EN.EXE' '' 
}

#---------------------------------------------------------------------------------------

ww_download_xpsp3()
{
ww_download c81472f7eeea2eca421e116cd4c03e2300ebfde4 'xpsp3.exe' 'https://web.archive.org/web/20150811102120/http://download.microsoft.com/download/d/3/0/d30e32d8-418a-469d-b600-f32ce3edf42d/WindowsXP-KB936929-SP3-x86-ENU.exe' '' 'ftp://mail.digipro.rs/Public/WindowsXP-KB936929-SP3-x86-ENU.exe' '' 'ftp://soporte.uson.mx/UTILES/04_SERVICE_PACKS/Windows/XP/SP3/ingles/WindowsXP-KB936929-SP3-x86-ENU.exe' '' 'ftp://ftp.sae24.ru/tools/System/M%24win_SP/xp_sp3/WindowsXP-KB936929-SP3-x86-ENU.exe' '' 'http://download.microsoft.com/download/d/3/0/d30e32d8-418a-469d-b600-f32ce3edf42d/WindowsXP-KB936929-SP3-x86-ENU.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_win7sp1()
{
ww_download c3516bc5c9e69fee6d9ac4f981f5b95977a8a2fa 'win7sp1.exe' 'http://download.microsoft.com/download/0/A/F/0AFB5316-3062-494A-AB78-7FB0D4461357/windows6.1-KB976932-X86.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_wm9codecs()
{
ww_download 8b76bdcbea0057eb12b7966edab4b942ddacc253 'wm9codecs.exe' 'http://birds.camden.rutgers.edu/WM9Codecs9x.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_directx81()
{
ww_download ea2345f602741343e97a5ece5d1d2c3cc44296c3 'directx81.exe' 'https://web.archive.org/web/20070403193305/http://download.microsoft.com/download/whistler/Update/8.1/W982KMeXP/EN-US/DX81Redist.exe' '' 'ftp://78.154.145.99/pub/windows/microsoft/dx/DX81Redist.exe' '' 'ftp://192.167.225.5/QuikTransfer/LabRX/DA%20SISTEMARE/80GB/old%20desk/NIIMAQ313/temp/3.1.3/DirectX%208.1/DX81Redist.exe' '' 'http://download.microsoft.com/download/whistler/Update/8.1/W982KMeXP/EN-US/DX81Redist.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_winetest()
{
ww_download ac8f50dd54d011f3bb1dd79240dae9378748449f 'winetest.cat' 'https://github.com/Winetricks/winetricks/raw/master/files/winetest.cat' '' 
}

#---------------------------------------------------------------------------------------

ww_download_special()
{
ww_download 4048d51470c80e38c3000affbf7d948ed2a8e083 linux64.special 'https://raw.githubusercontent.com/LLIAKAJL/WineWizard-Utils/master/linux64.special' ''
}

#---------------------------------------------------------------------------------------

ww_download_adobeair()
{
ww_download 2fdd561556fe881c4e5538d4ee37f523871befd3 'adobeair.exe' 'http://airdownload.adobe.com/air/win/download/20.0/AdobeAIRInstaller.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_allcodecs()
{
ww_download_dirac
ww_download_l3codecx
ww_download_ffdshow
ww_download_icodecs
ww_download_xvid
}

#---------------------------------------------------------------------------------------

ww_download_allfonts()
{
ww_download_droid
ww_download_baekmuk
ww_download_cambria
ww_download_eufonts
ww_download_ipamona
ww_download_liberation
ww_download_lucida
ww_download_opensymbol
ww_download_tahoma
ww_download_takao
ww_download_unifont 
ww_download_wenquanyi
ww_download_uff
ww_download_corefonts
}

#---------------------------------------------------------------------------------------

ww_download_amstream()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_art2kmin()
{
ww_download 571811b7536e97cf4e4e53bbf8260cddd69f9b2d 'art2kmin.exe' 'http://download.microsoft.com/download/D/2/A/D2A2FC8B-0447-491C-A5EF-E8AA3A74FB98/AccessRuntime.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_atmlib()
{
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_avifil32()
{
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_baekmuk()
{
ww_download afdee34f700007de6ea87b43c92a88b7385ba65b 'baekmuk.tar.gz' 'http://http.debian.net/debian/pool/main/f/fonts-baekmuk/fonts-baekmuk_2.2.orig.tar.gz' '' 
}

#---------------------------------------------------------------------------------------

ww_download_binkw32()
{
ww_download 6a30900885390ef361dbb67444a7944143db36bf 'binkw32.zip' 'http://www.down-dll.com/dll/b/__32-binkw32.dll3.0.0.0.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_cabinet()
{
ww_download_mdac27
}

#---------------------------------------------------------------------------------------

ww_download_cambria()
{
ww_download ab48a8ebac88219c84f293c6c1e81f1a0f420da6 'cam-const-cons.exe' 'http://download.microsoft.com/download/E/6/7/E675FFFC-2A6D-4AB0-B3EB-27C9F8C8F696/PowerPointViewer.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_cjkfonts()
{
ww_download_baekmuk
ww_download_takao
ww_download_unifont 
ww_download_wenquanyi
}

#---------------------------------------------------------------------------------------

ww_download_cmd()
{
ww_download ac6e28cfd12942e74aa08bddf7715705edb85b6b 'cmd.exe' 'https://web.archive.org/web/20150526022037/http://download.microsoft.com/download/8/d/c/8dc79965-dfbc-4b25-9546-e23bc4b791c6/Q811493_W2K_SP4_X86_EN.exe' '' 'http://download.microsoft.com/download/8/d/c/8dc79965-dfbc-4b25-9546-e23bc4b791c6/Q811493_W2K_SP4_X86_EN.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_comctl32()
{
ww_download 94c3c494258cc54bd65d2f0153815737644bffde 'comctl32.exe' 'ftp://ftp.ie.debian.org/disk1/download.sourceforge.net/pub/sourceforge/p/po/pocmin/Win%2095_98%20Controls/Win%2095_98%20Controls/CC32inst.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_comctl32ocx()
{
ww_download f52cf2034488235b37a1da837d1c40eb2a1bad84 'comctl32ocx.exe' 'http://download.microsoft.com/download/3/a/5/3a5925ac-e779-4b1c-bb01-af67dc2f96fc/VisualBasic6-KB896559-v1-ENU.exe' '' 
ww_download 766f9ccf8849a04d757faee379da54d635c8ac71 'mscomct2.cab' 'https://web.archive.org/web/20141012205821/http://activex.microsoft.com/controls/vb6/mscomct2.cab' '' 
}

#---------------------------------------------------------------------------------------

ww_download_comdlg32ocx()
{
ww_download d4f3e193c6180eccd73bad53a8500beb5b279cbf 'comdlg32ocx.cab' 'https://web.archive.org/web/20141227220748/http://activex.microsoft.com/controls/vb6/ComDlg32.cab' '' 
}

#---------------------------------------------------------------------------------------

ww_download_consolas()
{
ww_download_cambria
}

#---------------------------------------------------------------------------------------

ww_download_constantia()
{
ww_download_cambria
}

#---------------------------------------------------------------------------------------

ww_download_corefonts()
{
ww_download 6d75f8436f39ab2da5c31ce651b7443b4ad2916e 'arial32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/arial32.exe' '' 
ww_download d45cdab84b7f4c1efd6d1b369f50ed0390e3d344 'arialb32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/arialb32.exe' '' 
ww_download 2371d0327683dcc5ec1684fe7c275a8de1ef9a51 'comic32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/comic32.exe' '' 
ww_download 06a745023c034f88b4135f5e294fece1a3c1b057 'courie32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/courie32.exe' '' 
ww_download 90e4070cb356f1d811acb943080bf97e419a8f1e 'georgi32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/georgi32.exe' '' 
ww_download 86b34d650cfbbe5d3512d49d2545f7509a55aad2 'impact32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/impact32.exe' '' 
ww_download 20b79e65cdef4e2d7195f84da202499e3aa83060 'times32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/times32.exe' '' 
ww_download 50aab0988423efcc9cf21fac7d64d534d6d0a34a 'trebuc32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/trebuc32.exe' '' 
ww_download f5b93cedf500edc67502f116578123618c64a42a 'verdan32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/verdan32.exe' '' 
ww_download 2fb4a42c53e50bc70707a7b3c57baf62ba58398f 'webdin32.exe' 'ftp://ftp.fi.debian.org/gentoo/distfiles/webdin32.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_crypt32()
{
ww_download_win2ksp4
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_d3dcompiler_43()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3drm()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx10()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx10_43()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx11_42()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx11_43()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_26()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_28()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_31()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_35()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_36()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_39()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_42()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dx9_43()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_d3dxof()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dbghelp()
{
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_devenum()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dinput()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dinput8()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dirac()
{
ww_download_ahk
ww_download c912d30a8fa500c7841444559feb1f49301611c4 'dirac.exe' 'http://downloads.sourceforge.net/dirac/DiracDirectShowFilter-1.0.2.exe' '' 
ww_download_vcrun2008
}

#---------------------------------------------------------------------------------------

ww_download_directmusic()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_directplay()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_directx9()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dmsynth()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dotnet20()
{
ww_download a3625c59d7a2995fb60877b5f5324892a1693b2a 'dotnet20.exe' 'http://download.lenovo.com/ibmdl/pub/pc/pccbbs/thinkvantage_en/dotnetfx.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dotnet20sp1()
{
ww_download_dotnet20
ww_download eef5a36924cdf0c02598ccf96aa4f60887a49840 'dotnet20sp1.exe' 'http://download.microsoft.com/download/0/8/c/08c19fa4-4c4f-4ffb-9d6c-150906578c9e/NetFx20SP1_x86.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dotnet20sp2()
{
ww_download_ahk
ww_download_dotnet20
ww_download 22d776d4d204863105a5db99e8b8888be23c61a7 'dotnet20sp2.exe' 'http://download.microsoft.com/download/c/6/e/c6e88215-0178-4c6c-b5f3-158ff77b1f38/NetFx20SP2_x86.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dotnet30()
{
ww_download_dotnet20
ww_download f3d2c3c7e4c0c35450cf6dab1f9f2e9e7ff50039 'dotnet30.exe' 'ftp://ftp.kworld.com.tw/kworld/temp/Framework/dotnetfx3.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dotnet30sp1()
{
ww_download_dotnet20sp1
ww_download_dotnet30
ww_download 8d779e337920b097aa0c01859912950606e9fc12 'dotnet30sp1.exe' 'http://download.microsoft.com/download/8/F/E/8FEEE89D-9E4F-4BA3-993E-0FFEA8E21E1B/NetFx30SP1_x86.exe' '' 
ww_download 5d332ebd1025e294adafe72030fe33db707b2c82 'dotnet30sp1.xpsep.msi' 'http://download.microsoft.com/download/2/5/2/2526f55d-32bc-410f-be18-164ba67ae07d/XPSEP%20XP%20and%20Server%202003%2032%20bit.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dotnet35()
{
ww_download_dotnet30sp1
ww_download 0a271bb44531aadef902829f98dfad66e4a57586 'dotnet35.exe' 'http://download.microsoft.com/download/6/0/f/60fc5854-3cb8-4892-b6db-bd4f42510f28/dotnetfx35.exe' '' 
ww_download_msxml3
}

#---------------------------------------------------------------------------------------

ww_download_dotnet35sp1()
{
ww_download_dotnet35
ww_download_dotnet20sp2
ww_download 3dce66bae0dd71284ac7a971baed07030a186918 'dotnet35sp1.exe' 'http://download.microsoft.com/download/2/0/e/20e90413-712f-438c-988e-fdaa79a8ac3d/dotnetfx35.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dotnet_verifier()
{
ww_download b9712da2943e057668f21f68c473657a205c5cb8 'dotnet_verifier.zip' 'https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Components.PostAttachments/00/08/99/90/04/netfx_setupverifier_new_2015_12_18.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dpvoice()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_droid()
{
ww_download 560e4bcafdebaf29645fbf92633a2ae0d2f9801f 'DroidSans-Bold.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSans-Bold.ttf' '' 
ww_download 62f2841f61e4be66a0303cd1567ed2d300b4e31c 'DroidSans.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSans.ttf' '' 
ww_download c5e4f11e2f1d0b84e5f268a7ebfd28b54dc6bcdc 'DroidSansFallback.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSansFallback.ttf' '' 
ww_download b3a248c11692aa88a30eb25df425b8910fe05dc5 'DroidSansJapanese.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSansJapanese.ttf' '' 
ww_download 133fb6cf26ea073b456fb557b94ce8c46143b117 'DroidSansMono.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSansMono.ttf' '' 
ww_download 2775e9b8e96a3e9593acb5cf6923abb2e6008187 'DroidSerif-Bold.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSerif-Bold.ttf' '' 
ww_download 41ce5fef1bd0164caed6958885d7285c841c95f1 'DroidSerif-BoldItalic.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSerif-BoldItalic.ttf' '' 
ww_download e91cc6c1ae9a6699683bcee024551cb58d1be790 'DroidSerif-Italic.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSerif-Italic.ttf' '' 
ww_download a689ce25a4063cf501c12d616f832f2235b5b93b 'DroidSerif-Regular.ttf' 'https://github.com/android/platform_frameworks_base/raw/feef9887e8f8eb6f64fc1b4552c02efb5755cdc1/data/fonts/DroidSerif-Regular.ttf' '' 
}

#---------------------------------------------------------------------------------------

ww_download_dsdmo()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dsound()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dxdiag()
{
ww_download_directx81
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_dxdiagn()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_esent()
{
ww_download_win7sp1
}

#---------------------------------------------------------------------------------------

ww_download_eufonts()
{
ww_download 9b076c40cb63aa0d8512aa8e610ba11d3466e441 'eufonts.exe' 'http://download.microsoft.com/download/a/1/8/a180e21e-9c2b-4b54-9c32-bf7fd7429970/EUupdate.EXE' '' 
}

#---------------------------------------------------------------------------------------

ww_download_fakechinese()
{
ww_download_wenquanyi
}

#---------------------------------------------------------------------------------------

ww_download_fakejapanese()
{
ww_download_takao
}

#---------------------------------------------------------------------------------------

ww_download_fakejapanese_ipamona()
{
ww_download_ipamona
}

#---------------------------------------------------------------------------------------

ww_download_fakekorean()
{
ww_download_baekmuk
}

#---------------------------------------------------------------------------------------

ww_download_ffdshow()
{
ww_download 8534c31489e51df70ee9583438d6211e6f0696d0 'ffdshow.exe' 'http://downloads.sourceforge.net/ffdshow-tryout/ffdshow_beta7_rev3154_20091209.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_flash()
{
ww_download 40df72ab2c22bcd4442aa35eb586000776129982 'flashplayer.ax.zip' 'http://download.macromedia.com/pub/flashplayer/installers/archive/fp_14.0.0.176_archive.zip' '' 
ww_download 62e5bc2e88b50091847408b9d473ee4a6c185167 'flashplayer.exe' 'http://download.macromedia.com/pub/flashplayer/updaters/14/flashplayer_14_sa.exe' '' 
ww_download b94860ca0eff3e1420c24f9647a5f9f5e610ce34 'flashplayer.zip' 'http://download.macromedia.com/pub/flashplayer/installers/archive/fp_14.0.0.179_archive.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_gdiplus()
{
ww_download_win7sp1
}

#---------------------------------------------------------------------------------------

ww_download_gdiplus_winxp()
{
ww_download 6113cd89d77525958295ccbd73b5fb8b89abd0aa 'gdiplus_winxp.exe' 'http://download.cnet.com/NET-Framework-1-0-GDIPLUS-DLL-Security-Update/3000-10250_4-10732223.html' 'data-dl-url='\''\(.*0sp2-KB830348-X86-Enu.*\)'\''' 
}

#---------------------------------------------------------------------------------------

ww_download_gfw()
{
ww_download 6f9e0ba052c68c8b51bb0e3ce6024d0e1c7b20b2 'gfw.exe' 'http://download.microsoft.com/download/5/5/8/55846E20-4A46-4EF8-B272-7F988BC9090A/gfwlivesetupmin.exe' '' 
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_glidewrapper()
{
ww_download 7a9d60a18b660473742b476465e9aea7bd5ab6f8 'glidewrapper.exe' 'http://www.zeckensack.de/glide/archive/GlideWrapper084c.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_glut()
{
ww_download fb4731885c05b3cf2c79e85aabe8fc9949616ef4 'glut.zip' 'http://press.liacs.nl/researchdownloads/glut.win32/glut-3.7.6-bin.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_gmdls()
{
ww_download_directx81
}

#---------------------------------------------------------------------------------------

ww_download_hid()
{
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_icodecs()
{
ww_download_ahk
ww_download 2c5d64f472abe3f601ce352dcca75b4f02996f8a 'icodecs.exe' 'http://www.cucusoft.com/codecdownload/codinstl.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_ie6()
{
ww_download 8e483db28ff01a7cabd39147ab6c59753ea1f533 'ie60.exe' 'http://download.oldapps.com/Internet_Explorer/ie60.exe' '' 
ww_download_msls31
ww_download_pngfilt
}

#---------------------------------------------------------------------------------------

ww_download_ie7()
{
ww_download d39b89c360fbaa9706b5181ae4718100687a5326 'ie7.exe' 'http://download.microsoft.com/download/3/8/8/38889DC1-848C-4BF2-8335-86C573AD86D9/IE7-WindowsXP-x86-enu.exe' '' 
ww_download_winetest
}

#---------------------------------------------------------------------------------------

ww_download_ie8()
{
ww_download e489483e5001f95da04e1ebf3c664173baef3e26 'ie8.exe' 'http://download.microsoft.com/download/C/C/0/CC0BD555-33DD-411E-936B-73AC6F95AE11/IE8-WindowsXP-x86-ENU.exe' '' 
ww_download_msls31
ww_download_winetest
}

#---------------------------------------------------------------------------------------

ww_download_ie8_kb2936068()
{
ww_download_ie8
ww_download 1bdeb741085b8f1ef6efc83f8615121373107347 'ie8_kb2936068.exe' 'https://download.microsoft.com/download/3/8/C/38CE0ABB-01FD-4C0A-A569-BC5E82C34A17/IE8-WindowsXP-KB2936068-x86-ENU.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_ipamona()
{
ww_download 57dd13ab58c0005d3ee2932539e4987ab0242bc7 'ipamona.tar.gz' 'http://www.geocities.jp/ipa_mona/opfc-ModuleHP-1.1.1_withIPAMonaFonts-1.0.8.tar.gz' '' 
}

#---------------------------------------------------------------------------------------

ww_download_jet40()
{
ww_download 8cd25342030857969ede2d8fcc34f3f7bcc2d6d4 'jet40.exe' 'http://download.microsoft.com/download/4/3/9/4393c9ac-e69e-458d-9f6d-2fe191c51469/jet40sp8_9xnt.exe' '' 
ww_download_mdac27
ww_download_wsh57
}

#---------------------------------------------------------------------------------------

ww_download_l3codecx()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_liberation()
{
ww_download 097882c92e3260742a3dc3bf033792120d8635a3 'liberation.tar.gz' 'https://fedorahosted.org/releases/l/i/liberation-fonts/liberation-fonts-1.04.tar.gz' '' 
}

#---------------------------------------------------------------------------------------

ww_download_lucida()
{
ww_download 64c47ad92265f6f10b0fd909a703d4fd1b05b2d5 'lucida.exe' 'ftp://ftp.fu-berlin.de/pc/security/ms-patches/winnt/usa/NT40TSE/hotfixes-postSP3/Euro-fix/eurofixi.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_mdac27()
{
ww_download f68594d1f578c3b47bf0639c46c11c5da161feee 'mdac27.exe' 'https://web.archive.org/web/20080731135848/http://download.microsoft.com/download/3/b/f/3bf74b01-16ba-472d-9a8c-42b2b4fa0d76/mdac_typ.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_mdac28()
{
ww_download 4fbc272c79da59e38818924d8575accb0af776fb 'mdac28.exe' 'http://download.microsoft.com/download/4/a/a/4aafff19-9d21-4d35-ae81-02c48dcbbbff/MDAC_TYP.EXE' '' 
}

#---------------------------------------------------------------------------------------

ww_download_mdx()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_mf()
{
ww_download_win7sp1
}

#---------------------------------------------------------------------------------------

ww_download_mfc40()
{
ww_download 53c570e2c811674d6e4fa46cff5a3a04cd0ffc24 'mfc40.cab' 'https://web.archive.org/web/20070316220826/http://activex.microsoft.com/controls/vc/mfc40.cab' '' 
}

#---------------------------------------------------------------------------------------

ww_download_mfc42()
{
ww_download_vcrun6
}

#---------------------------------------------------------------------------------------

ww_download_msacm32()
{
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_msasn1()
{
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_msctf()
{
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_msdxmocx()
{
ww_download 44aef252a660612a01ee13271d84d2da3885e58d 'msdxmocx.exe' 'http://hell.pl/agnus/windows95/mpfull.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msflxgrd()
{
ww_download 3d6c04e923781d4ce0d3ab62189b8de352ab25d5 'msflxgrd.cab' 'ftp://dns24289.dizinc.com/TEMP/vb6%20sp6%20install/MSFlxGrd.CAB' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msftedit()
{
ww_download_win7sp1
}

#---------------------------------------------------------------------------------------

ww_download_mshflxgd()
{
ww_download 5f9c7a81022949bfe39b50f2bbd799c448bb7377 'mshflxgd.cab' 'ftp://dns24289.dizinc.com/TEMP/vb6%20sp6%20install/MSHFlxGd.CAB' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msls31()
{
ww_download 4fc3bf0dc96b5cf5ab26430fac1c33c5c50bd142 'msls31.exe' 'https://web.archive.org/web/20160710055851/http://download.microsoft.com/download/WindowsInstaller/Install/2.0/NT45/EN-US/InstMsiW.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msmask()
{
ww_download bdd2bb3a32d18926a048f302aff18b1e6d250d9d 'msmask.cab' 'ftp://dns24289.dizinc.com/TEMP/vb6%20sp6%20install/MSMask32.CAB' '' 
}

#---------------------------------------------------------------------------------------

ww_download_mspatcha()
{
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_msscript()
{
ww_download fd9f2f23357ab11ae70682d6864f7e9f188adf2a 'msscript.exe' 'https://web.archive.org/web/20160327122736/http://download.microsoft.com/download/d/2/a/d2a7430c-6d5b-48e9-96c4-3c751be7bffe/sct10en.exe' '' 'ftp://94.226.105.180/Public/Test/c_drive/OidView/sct10en.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msvcirt()
{
ww_download_vcrun6
}

#---------------------------------------------------------------------------------------

ww_download_msxml3()
{
ww_download d4c2178dfb807e1a0267fce0fd06b8d51106d913 'msxml3.msi' 'https://web.archive.org/web/20070314193356/http://download.microsoft.com/download/8/8/8/888f34b7-4f54-4f06-8dac-fa29b19f33dd/msxml3.msi' '' 'ftp://85.66.4.250/E_meghajto/ZOLI_C_SAVE/Documents%20and%20Settings/Docsis/Local%20Settings/Temp/NERO14767/Data/Redist/msxml3.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msxml4()
{
ww_download aa70c5c1a7a069af824947bcda1d9893a895318b 'msxml4.msi' 'http://download.microsoft.com/download/A/2/D/A2D8587D-0027-4217-9DAD-38AFDB0A177E/msxml.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_msxml6()
{
ww_download 5125220e985b33c946bbf9f60e2b222c7570bfa2 'msxml6.msi' 'http://download.microsoft.com/download/e/a/f/eafb8ee7-667d-4e30-bb39-4694b5b3006f/msxml6_x86.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_ogg()
{
ww_download 386cf7cd29ffcbf8705eff8c8233de448ecf33ab 'ogg.exe' 'http://downloads.xiph.org/releases/oggdsf/opencodecs_0.85.17777.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_opensymbol()
{
ww_download b683e6304c58fdbb5c31443609a3398c71a3fcf0 'opensymbol.deb' 'http://security.debian.org/debian-security/pool/updates/main/libr/libreoffice/fonts-opensymbol_102.6+LibO4.3.3-2+deb8u5_all.deb' '' 'https://web.archive.org/web/20160730080936/http://security.debian.org/debian-security/pool/updates/main/libr/libreoffice/fonts-opensymbol_102.6+LibO4.3.3-2+deb8u5_all.deb' '' 
}

#---------------------------------------------------------------------------------------

ww_download_pdh()
{
ww_download f42448660def8cd7f42b34aa7bc7264745f4425e 'pdh.exe' 'http://download.microsoft.com/download/platformsdk/Redist/5.0.2195.2668/NT4/EN-US/pdhinst.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_physx()
{
ww_download 81e2d38e2356e807ad80cdf150ed5acfff839c8b 'physx.msi' 'http://uk.download.nvidia.com/Windows/9.14.0702/PhysX-9.14.0702-SystemSoftware.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_pngfilt()
{
ww_download 6f5db296ebf58e81c49bc667049a3f88a3f1ec3d 'pngfilt.exe' 'https://web.archive.org/web/20061224003406/http://download.microsoft.com/download/5/0/c/50c42d0e-07a8-4a2b-befb-1a403bd0df96/IE5.01sp4-KB871260-Windows2000sp4-x86-ENU.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_postinstall_script()
{
ww_download_special
}

#---------------------------------------------------------------------------------------

ww_download_preinstall_script()
{
ww_download_special
}

#---------------------------------------------------------------------------------------

ww_download_python26()
{
ww_download_ahk
ww_download eca58f29b810d8e3e7951277ebb3e35ac35794a3 'python26.exe' 'http://downloads.sourceforge.net/project/pywin32/pywin32/Build%20214/pywin32-214.win32-py2.6.exe' '' 
ww_download 2d1503b0e8b7e4c72a276d4d9027cf4856b208b8 'python26.msi' 'http://www.python.org/ftp/python/2.6.2/python-2.6.2.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_qdvd()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_quartz()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_quicktime72()
{
ww_download bb89981f10cf21de57b9453e53cf81b9194271a9 'quicktime72.exe' 'http://appldnld.apple.com.edgesuite.net/content.info.apple.com/QuickTime/061-2915.20070710.pO94c/QuickTimeInstaller.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_quicktime76()
{
ww_download 1eec8904f041d9e0ad3459788bdb690e45dbc38e 'quicktime76.exe' 'http://appldnld.apple.com/QuickTime/041-0025.20101207.Ptrqt/QuickTimeInstaller.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_riched20()
{
ww_download_msls31
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_riched30()
{
ww_download e739c40d747e7c27aacdb07b50925b1635ee7366 'instmsia.exe' 'http://download.microsoft.com/download/WindowsInstaller/Install/2.0/W9XMe/EN-US/InstMsiA.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_richtx32()
{
ww_download da404b566df3ad74fe687c39404a36c3e7cadc07 'richtx32.cab' 'ftp://111.122.210.98/linux/winetricks/richtx32/richtx32.cab' '' 
}

#---------------------------------------------------------------------------------------

ww_download_sdl()
{
ww_download d22c71d1c2bdf283548187c4b0bd7ef9d0c1fb23 'sdl.zip' 'http://www.libsdl.org/release/SDL-1.2.14-win32.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_secur32()
{
ww_download bf930a4d2982165a0793465bb255d494ba5b4cf7 'secur32.exe' 'ftp://111.122.210.98/linux/winetricks/secur32/Windows2000-KB959426-x86-ENU.EXE' '' 
}

#---------------------------------------------------------------------------------------

ww_download_setupapi()
{
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_shockwave()
{
ww_download bcb6a9d9a6f7781db3de3120a0c9dcd8118642d1 'shockwave.msi' 'http://fpdownload.macromedia.com/get/shockwave/default/english/win95nt/latest/sw_lic_full_installer.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_speechsdk()
{
ww_download f69efaee8eb47f8c7863693e8b8265a3c12c4f51 'speechsdk.exe' 'http://download.microsoft.com/download/B/4/3/B4314928-7B71-4336-9DE7-6FA4CF00B7B3/SpeechSDK51.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_tabctl32()
{
ww_download beca51d05924a5466ab80eb0f8d0cdf8bc1ac697 'tabctl32.cab' 'https://web.archive.org/web/20110818064708/http://activex.microsoft.com/controls/vb6/TABCTL32.CAB' '' 
}

#---------------------------------------------------------------------------------------

ww_download_tahoma()
{
ww_download 888ce7b7ab5fd41f9802f3a65fd0622eb651a068 'tahoma.exe' 'http://download.microsoft.com/download/office97pro/fonts/1/w95/en-us/tahoma32.exe' '' 'https://web.archive.org/web/20160401090253/http://download.microsoft.com/download/office97pro/fonts/1/w95/en-us/tahoma32.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_takao()
{
ww_download 4f636d5c7c1bc16b96ea723adb16838cfb6df059 'takao.zip' 'http://launchpad.net/takao-fonts/trunk/003.02.01/+download/takao-fonts-ttf-003.02.01.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_uff()
{
ww_download efbab0d5d8cb5cff091307d2360dcb1bfe1ae6e1 'uff.zip' 'http://font.ubuntu.com/download/ubuntu-font-family-0.70.1.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_unifont()
{
ww_download bb8a3960dc0a96aa305de28312ea8a0ab64123d2 'unifont.zip' 'http://unifoundry.com/unifont-5.1.20080907.zip' '' 
}

#---------------------------------------------------------------------------------------

ww_download_updspapi()
{
ww_download_xpsp3
}

#---------------------------------------------------------------------------------------

ww_download_usp10()
{
ww_download_riched30
}

#---------------------------------------------------------------------------------------

ww_download_vb2run()
{
ww_download ac0568b73ee375408778e9b505df995f79ab907e 'vb2run.exe' 'http://www.conradshome.com/win31/archive/softlib/vbrun200.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vb3run()
{
ww_download 518fcfefde9bf680695cadd06512efadc5ac2aa7 'vb3run.exe' 'http://download.microsoft.com/download/vb30/utility/1/w9xnt4/en-us/vb3run.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vb4run()
{
ww_download 83e968063272e97bfffd628a73bf0ff5f8e1023b 'vb4run.exe' 'http://download.microsoft.com/download/vb40ent/sample27/1/w9xnt4/en-us/vb4run.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vb5run()
{
ww_download 28bfaf09b8ac32cf5ffa81252f3e2fadcb3a8f27 'vb5run.exe' 'http://download.microsoft.com/download/vb50pro/utility/1/win98/en-us/msvbvm50.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vb6run()
{
ww_download 73ef177008005675134d2f02c6f580515ab0d842 'vb6run.exe' 'http://download.microsoft.com/download/5/a/d/5ad868a0-8ecd-4bb0-a882-fe53eb7ef348/VB6.0-KB290887-X86.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2003()
{
ww_download 9ffdd079dace2723e1849dd93bb23ed7b9c3b06b 'mfc71.zip' 'http://www.dll-files.com/dllindex/dll-files.shtml?mfc71' 'href="\(.*f35a584e947a5b401feb0fe01db4a0d7.*\)">' 
ww_download 9119ded781b67b3ff7825218113c697ef683212b 'msvcp71.zip' 'http://www.dll-files.com/dllindex/dll-files.shtml?msvcp71' 'href="\(.*561fa2abb31dfa8fab762145f81667c2.*\)">' 
ww_download 6db2a3fd269fa264ffc66dc491bb1dc223bbc70e 'msvcr71.zip' 'http://www.dll-files.com/dllindex/dll-files.shtml?msvcr71' 'href="\(.*86f1895ae8c5e8b17d99ece768a70732.*\)">' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2005()
{
ww_download b8fab0bb7f62a24ddfe77b19cd9a1451abd7b847 'vcrun2005.exe' 'http://download.microsoft.com/download/8/B/4/8B42259F-5D70-43F4-AC2E-4B208FD8D66A/vcredist_x86.EXE' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2008()
{
ww_download 470640aa4bb7db8e69196b5edb0010933569e98d 'vcrun2008.exe' 'http://download.microsoft.com/download/5/D/8/5D8C65CB-C849-4025-8E95-C3966CAFD8AE/vcredist_x86.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2010()
{
ww_download 372d9c1670343d3fb252209ba210d4dc4d67d358 'vcrun2010.exe' 'http://download.microsoft.com/download/5/B/C/5BC5DBB3-652D-4DCE-B14A-475AB85EEF6E/vcredist_x86.exe' '' 
ww_download 027d0c2749ec5eb21b031f46aee14c905206f482 'vcrun2010.x64.exe' 'http://download.microsoft.com/download/A/8/0/A80747C3-41BD-45DF-B505-E9710D2744E0/vcredist_x64.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2012()
{
ww_download 96b377a27ac5445328cbaae210fc4f0aaa750d3f 'vcrun2012.exe' 'http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU_4/vcredist_x86.exe' '' 
ww_download 1a5d93dddbc431ab27b1da711cd3370891542797 'vcrun2012.x64.exe' 'http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU_4/vcredist_x64.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2013()
{
ww_download df7f0a73bfa077e483e51bfb97f5e2eceedfb6a3 'vcrun2013.exe' 'http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x86.exe' '' 
ww_download 8bf41ba9eef02d30635a10433817dbb6886da5a2 'vcrun2013.x64.exe' 'http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x64.exe' ''
}

#---------------------------------------------------------------------------------------

ww_download_vcrun2015()
{
ww_download bfb74e498c44d3a103ca3aa2831763fb417134d1 'vcrun2015.exe' 'https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x86.exe' '' 
ww_download 3155cb0f146b927fcc30647c1a904cd162548c8c 'vcrun2015.x64.exe' 'https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x64.exe' ''
}

#---------------------------------------------------------------------------------------

ww_download_vcrun6()
{
ww_download a8c4dd33e281c166488846a10edf97ff0ce37044 'vcrun6.exe' 'http://download.microsoft.com/download/vc60pro/Update/2/W9XNT4/EN-US/VC6RedistSetup_deu.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vcrun6sp6()
{
ww_download 2292437a8967349261c810ae8b456592eeb76620 'vcrun6sp6.exe' 'http://download.microsoft.com/download/1/9/f/19fe4660-5792-4683-99e0-8d48c22eed74/Vs6sp6.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_vjrun20()
{
ww_download_dotnet20
ww_download 80a098e36b90d159da915aebfbfbacf35f302bd8 'vjrun20.exe' 'http://download.microsoft.com/download/9/2/3/92338cd0-759f-4815-8981-24b437be74ef/vjredist.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_wenquanyi()
{
ww_download 28023041b22b6368bcfae076de68109b81e77976 'wenquanyi.tar.gz' 'http://downloads.sourceforge.net/wqy/wqy-microhei-0.2.0-beta.tar.gz' '' 
}

#---------------------------------------------------------------------------------------

ww_download_windowscodecs()
{
ww_download 53c18652ac2f8a51303deb48a1b7abbdb1db427f 'windowscodecs.exe' 'http://download.microsoft.com/download/f/f/1/ff178bb1-da91-48ed-89e5-478a99387d4f/wic_x86_enu.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_winhttp()
{
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_wininet()
{
ww_download_win2ksp4
}

#---------------------------------------------------------------------------------------

ww_download_wmi()
{
ww_download 62752e9c1b879688c26f205eebf07d3783906c3e 'wmi.exe' 'http://download.microsoft.com/download/platformsdk/wmi9x/1.5/W9X/EN-US/wmi9x.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_wmp10()
{
ww_download_wm9codecs
ww_download 69862273a5d9d97b4a2e5a3bd93898d259e86657 'wmp10.exe' 'http://download.microsoft.com/download/1/2/a/12a31f29-2fa9-4f50-b95d-e45ef7013f87/MP10Setup.exe' '' 
ww_download_wsh57
}

#---------------------------------------------------------------------------------------

ww_download_wmp9()
{
ww_download_wm9codecs
ww_download 580536d10657fa3868de2869a3902d31a0de791b 'wmp9.exe' 'http://download.microsoft.com/download/1/b/c/1bc0b1a3-c839-4b36-8f3c-19847ba09299/MPSetup.exe' '' 
ww_download_wsh57
}

#---------------------------------------------------------------------------------------

ww_download_wmv9vcm()
{
ww_download 0ace94c09bfab15410db3a15ffa42370891266de 'wmv9vcm.exe' 'https://download.microsoft.com/download/2/8/D/28DA9C3E-6DA2-456F-BD33-1F937EB6E0FF/WindowsServer2003-WindowsMedia-KB2845142-x86-ENU.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_wsh56js()
{
ww_download add5f74c5bd4da6cfae47f8306de213ec6ed52c8 'wsh56js.exe' 'http://download.microsoft.com/download/b/c/3/bc3a0c36-fada-497d-a3de-8b0139766f3b/Windows2000-KB917344-56-x86-enu.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_wsh56vb()
{
ww_download 48f14a93db33caff271da0c93f334971f9d7cb22 'wsh56vb.exe' 'https://web.archive.org/web/20141107073935/http://download.microsoft.com/download/IE60/Patch/Q318089/W9XNT4Me/EN-US/vbs56men.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_wsh57()
{
ww_download b15c6a834b7029e2dfed22127cf905b06857e6f5 'wsh57.exe' 'http://download.microsoft.com/download/4/4/d/44de8a9e-630d-4c10-9f17-b9b34d3f6417/scripten.exe' '' 
}

#---------------------------------------------------------------------------------------

ww_download_xact()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_xact_jun2010()
{
ww_download_dx_jun2010
}

#---------------------------------------------------------------------------------------

ww_download_xinput()
{
ww_download_dx_feb2010
}

#---------------------------------------------------------------------------------------

ww_download_xna31()
{
ww_download_dotnet20sp2
ww_download bdd33b677c9576a63ff2a6f65e12c0563cc116e6 'xna31.msi' 'http://download.microsoft.com/download/5/9/1/5912526C-B950-4662-99B6-119A83E60E5C/xnafx31_redist.msi' '' 
}

#---------------------------------------------------------------------------------------

ww_download_xvid()
{
ww_download_vcrun6
ww_download 0a11498a96f75ad019c4c7d06161504140337dc0 'xvid.exe' 'http://www.koepi.info/Xvid-1.3.2-20110601.exe' '' 
}

#---------------------------------------------------------------------------------------
#                                        CHECK                                        
#---------------------------------------------------------------------------------------

ww_check_baekmuk()
{
ww_exists "$WW_FONTS/batang.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_cambria()
{
ww_exists "$WW_FONTS/cambria.ttc"
}

#---------------------------------------------------------------------------------------

ww_check_consolas()
{
ww_exists "$WW_FONTS/consola.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_constantia()
{
ww_exists "$WW_FONTS/constan.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_corefonts()
{
ww_exists "$WW_FONTS/Arial.TTF"
}

#---------------------------------------------------------------------------------------

ww_check_dirac()
{
ww_native "$WW_PROGRAM_FILES/Dirac/DiracDecoder.dll"
}

#---------------------------------------------------------------------------------------

ww_check_directmusic()
{
ww_native "$WW_SYSTEM32/dmusic.dll"
}

#---------------------------------------------------------------------------------------

ww_check_dotnet20()
{
ww_native "$WW_WINDOWS/Microsoft.NET/Framework/v2.0.50727/Microsoft .NET Framework 2.0/install.exe"
}

#---------------------------------------------------------------------------------------

ww_check_dotnet20sp1()
{
ww_native "$WW_WINDOWS/winsxs/manifests/x86_Microsoft.VC80.CRT_1fc8b3b9a1e18e3b_8.0.50727.1433_x-ww_5cf844d2.cat"
}

#---------------------------------------------------------------------------------------

ww_check_dotnet20sp2()
{
ww_exists "$WW_WINDOWS/winsxs/manifests/x86_Microsoft.VC80.CRT_1fc8b3b9a1e18e3b_8.0.50727.3053_x-ww_b80fa8ca.cat"
}

#---------------------------------------------------------------------------------------

ww_check_dotnet30()
{
ww_exists "$WW_WINDOWS/Microsoft.NET/Framework/v3.0/Microsoft .NET Framework 3.0/logo.bmp"
}

#---------------------------------------------------------------------------------------

ww_check_dotnet30sp1()
{
ww_native "$WW_SYSTEM32/XpsFilt.dll"
}

#---------------------------------------------------------------------------------------

ww_check_dotnet35()
{
ww_native "$WW_WINDOWS/Microsoft.NET/Framework/v3.5/MSBuild.exe"
}

#---------------------------------------------------------------------------------------

ww_check_droid()
{
ww_exists "$WW_FONTS/DroidSans-Bold.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_dsound()
{
ww_native "$WW_SYSTEM32/dsound.dll"
}

#---------------------------------------------------------------------------------------

ww_check_dxdiagn()
{
ww_native "$WW_SYSTEM32/dxdiagn.dll"
}

#---------------------------------------------------------------------------------------

ww_check_eufonts()
{
ww_exists "$WW_FONTS/trebucbd.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_ffdshow()
{
ww_native "$WW_PROGRAM_FILES/ffdshow/ff_liba52.dll"
}

#---------------------------------------------------------------------------------------

ww_check_gmdls()
{
ww_native "$WW_SYSTEM32/drivers/gm.dls"
}

#---------------------------------------------------------------------------------------

ww_check_icodecs()
{
ww_native "$WW_SYSTEM32/ir50_32.dll"
}

#---------------------------------------------------------------------------------------

ww_check_ie8()
{
ww_exists "$WW_WINDOWS/ie8_main.log"
}

#---------------------------------------------------------------------------------------

ww_check_ipamona()
{
ww_exists "$WW_FONTS/ipag-mona.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_l3codecx()
{
ww_native "$WW_SYSTEM32"/l3codeca.acm
}

#---------------------------------------------------------------------------------------

ww_check_liberation()
{
ww_exists "$WW_FONTS/LiberationMono-BoldItalic.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_lucida()
{
ww_exists "$WW_FONTS/lucon.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_msasn1()
{
ww_native "$WW_SYSTEM32/msasn1.dll"
}

#---------------------------------------------------------------------------------------

ww_check_msls31()
{
ww_native "$WW_SYSTEM32/msls31.dll"
}

#---------------------------------------------------------------------------------------

ww_check_msxml3()
{
ww_native "$WW_SYSTEM32/msxml3.dll"
}

#---------------------------------------------------------------------------------------

ww_check_opensymbol()
{
ww_exists "$WW_FONTS/opens___.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_pngfilt()
{
ww_native "$WW_SYSTEM32/pngfilt.dll"
}

#---------------------------------------------------------------------------------------

ww_check_tahoma()
{
ww_exists "$WW_FONTS/tahoma.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_takao()
{
ww_exists "$WW_FONTS/TakaoGothic.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_uff()
{
ww_exists "$WW_FONTS/Ubuntu-R.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_unifont()
{
ww_exists "$WW_FONTS/unifont.ttf"
}

#---------------------------------------------------------------------------------------

ww_check_vcrun2008()
{
ww_native "$WW_PROGRAM_FILES/Common Files/Microsoft Shared/VC/msdia90.dll"
}

#---------------------------------------------------------------------------------------

ww_check_vcrun6()
{
ww_native "$WW_SYSTEM32/mfc42.dll"
}

#---------------------------------------------------------------------------------------

ww_check_wenquanyi()
{
ww_exists "$WW_FONTS/wqy-microhei.ttc"
}

#---------------------------------------------------------------------------------------

ww_check_wsh57()
{
ww_native "$WW_SYSTEM32/scrrun.dll"
}

#---------------------------------------------------------------------------------------

ww_check_xvid()
{
ww_exists "$WW_PROGRAM_FILES/Xvid/xvid.ico"
}

#---------------------------------------------------------------------------------------
#                                       INSTALL                                        
#---------------------------------------------------------------------------------------

ww_install_adobeair()
{
ww_cd_repo_wine adobeair.exe $WW_UNATTENDED_DASH_SILENT
}

#---------------------------------------------------------------------------------------

ww_install_allcodecs()
{
ww_install dirac
ww_install l3codecx
ww_install ffdshow
ww_install icodecs
ww_install xvid
}

#---------------------------------------------------------------------------------------

ww_install_allfonts()
{
ww_install cambria
ww_install constantia
ww_install consolas
ww_install corefonts
ww_install droid
ww_install eufonts
ww_install liberation
ww_install lucida
ww_install opensymbol
ww_install tahoma
ww_install uff
ww_install unifont
ww_install cjkfonts
ww_install fakejapanese_ipamona
}

#---------------------------------------------------------------------------------------

ww_install_amstream()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'amstream.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr amstream.dll

ww_override native amstream
}

#---------------------------------------------------------------------------------------

ww_install_ao_disabled()
{
ww_set_wined3d_var AlwaysOffscreen disabled
}

#---------------------------------------------------------------------------------------

ww_install_ao_enabled()
{
ww_set_wined3d_var AlwaysOffscreen enabled
}

#---------------------------------------------------------------------------------------

ww_install_art2kmin()
{
ww_cd_repo_wine art2kmin.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_atmlib()
{
ww_win2ksp4_helper i386/atmlib.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/atmlib.dl_
}

#---------------------------------------------------------------------------------------

ww_install_avifil32()
{
ww_xpsp3_helper i386/avifil32.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/avifil32.dl_
}

#---------------------------------------------------------------------------------------

ww_install_baekmuk()
{
ww_cd "$WW_TEMP"
tar zxvf "$WW_CACHE/baekmuk.tar.gz" baekmuk-ttf-2.2/ttf
ww_mv baekmuk-ttf-2.2/ttf/*.ttf "$WW_FONTS"
ww_register_font batang.ttf "Baekmuk Batang"
ww_register_font gulim.ttf "Baekmuk Gulim"
ww_register_font dotum.ttf "Baekmuk Dotum"
ww_register_font hline.ttf "Baekmuk Headline"
}

#---------------------------------------------------------------------------------------

ww_install_binkw32()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/binkw32.zip
ww_cp "$WW_TEMP"/binkw32.dll "$WW_SYSTEM32"/binkw32.dll

ww_override native binkw32
}

#---------------------------------------------------------------------------------------

ww_install_cabinet()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/mdac27.exe
ww_cp "$WW_TEMP"/cabinet.dll "$WW_SYSTEM32"/cabinet.dll

ww_override native,builtin cabinet
}

#---------------------------------------------------------------------------------------

ww_install_cambria()
{
ww_cabextract -d "$WW_TEMP" -L -F ppviewer.cab "$WW_CACHE"/cam-const-cons.exe
ww_cabextract -d "$WW_FONTS" -L -F "CAMBRIA*.TT*" "$WW_TEMP"/ppviewer.cab
ww_register_font cambria.ttc "Cambria"
ww_register_font cambriab.ttf "Cambria Bold"
ww_register_font cambriai.ttf "Cambria Italic"
ww_register_font cambriaz.ttf "Cambria Bold Italic"
}

#---------------------------------------------------------------------------------------

ww_install_cjkfonts()
{
ww_install fakechinese
ww_install fakejapanese
ww_install fakekorean
ww_install unifont
}

#---------------------------------------------------------------------------------------

ww_install_cmd()
{
ww_cabextract -d "$WW_SYSTEM32" "$WW_CACHE/cmd.exe" -F cmd.exe
ww_override native,builtin cmd.exe
}

#---------------------------------------------------------------------------------------

ww_install_comctl32()
{
ww_wine "$WW_CACHE"/comctl32.exe "/T:$WW_TEMP_WIN" /c $WW_UNATTENDED_SLASH_Q
ww_unzip "$WW_TEMP" "$WW_TEMP"/comctl32.exe
ww_wine "$WW_TEMP"/x86/50ComUpd.Exe "/T:$WW_TEMP_WIN" /c $WW_UNATTENDED_SLASH_Q
ww_cp "$WW_TEMP"/comcnt.dll "$WW_SYSTEM32"/comctl32.dll
ww_override native,builtin comctl32
ww_override_app winecfg.exe builtin comctl32
ww_override_app explorer.exe builtin comctl32
ww_override_app iexplore.exe builtin comctl32
}

#---------------------------------------------------------------------------------------

ww_install_comctl32ocx()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/comctl32ocx.exe
ww_try cp "$WW_TEMP"/mscomctl.ocx "$WW_SYSTEM32"/mscomctl.ocx
ww_try cp "$WW_TEMP"/comctl32.ocx "$WW_SYSTEM32"/comctl32.ocx
ww_regsvr comctl32.ocx
ww_regsvr mscomctl.ocx

ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/mscomct2.cab
ww_try cp "$WW_TEMP"/mscomct2.ocx "$WW_SYSTEM32"/mscomct2.ocx
ww_regsvr mscomct2.ocx
}

#---------------------------------------------------------------------------------------

ww_install_comdlg32ocx()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/comdlg32ocx.cab
ww_try cp "$WW_TEMP"/comdlg32.ocx "$WW_SYSTEM32"/comdlg32.ocx
ww_regsvr comdlg32.ocx
}

#---------------------------------------------------------------------------------------

ww_install_consolas()
{
ww_cabextract -d "$WW_TEMP" -L -F ppviewer.cab "$WW_CACHE"/cam-const-cons.exe
ww_cabextract -d "$WW_FONTS" -L -F 'CONSOL*.TTF' "$WW_TEMP"/ppviewer.cab
ww_register_font consola.ttf "Consoleas"
ww_register_font consolab.ttf "Consoleas Bold"
ww_register_font consolai.ttf "Consoleas Italic"
ww_register_font consolaz.ttf "Consoleas Bold Italic"
}

#---------------------------------------------------------------------------------------

ww_install_constantia()
{
ww_cabextract -d "$WW_TEMP" -L -F ppviewer.cab "$WW_CACHE"/cam-const-cons.exe
ww_cabextract -d "$WW_FONTS" -L -F 'CONSTAN*.TTF' "$WW_TEMP"/ppviewer.cab
ww_register_font constan.ttf "Constantia"
ww_register_font constanb.ttf "Constantia Bold"
ww_register_font constani.ttf "Constantia Italic"
ww_register_font constanz.ttf "Constantia Bold Italic"
}

#---------------------------------------------------------------------------------------

ww_install_corefonts()
{
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/arial32.exe
ww_cp "$WW_TEMP"/Arial*.TTF "$WW_FONTS"
ww_register_font Arial.TTF "Arial"
ww_register_font Arialbd.TTF "Arial Bold"
ww_register_font Arialbi.TTF "Arial Bold Italic"
ww_register_font Ariali.TTF "Arial Italic"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/arialb32.exe
ww_cp "$WW_TEMP"/AriBlk.TTF "$WW_FONTS"
ww_register_font AriBlk.TTF "Arial Black"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/comic32.exe
ww_cp "$WW_TEMP"/Comic*.TTF "$WW_FONTS"
ww_register_font Comic.TTF "Comic Sans MS"
ww_register_font Comicbd.TTF "Comic Sans MS Bold"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/courie32.exe
ww_cp "$WW_TEMP"/cour*.ttf "$WW_FONTS"
ww_register_font Cour.TTF "Courier New"
ww_register_font CourBD.TTF "Courier New Bold"
ww_register_font CourBI.TTF "Courier New Bold Italic"
ww_register_font Couri.TTF "Courier New Italic"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/georgi32.exe
ww_cp "$WW_TEMP"/Georgia*.TTF "$WW_FONTS"
ww_register_font Georgia.TTF "Georgia"
ww_register_font Georgiab.TTF "Georgia Bold"
ww_register_font Georgiaz.TTF "Georgia Bold Italic"
ww_register_font Georgiai.TTF "Georgia Italic"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/impact32.exe
ww_cp "$WW_TEMP"/Impact.TTF "$WW_FONTS"
ww_register_font Impact.TTF "Impact"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/times32.exe
ww_cp "$WW_TEMP"/Times*.TTF "$WW_FONTS"
ww_register_font Times.TTF "Times New Roman"
ww_register_font Timesbd.TTF "Times New Roman Bold"
ww_register_font Timesbi.TTF "Times New Roman Bold Italic"
ww_register_font Timesi.TTF "Times New Roman Italic"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/trebuc32.exe
ww_cp "$WW_TEMP"/[tT]rebuc*.ttf "$WW_FONTS"
ww_register_font Trebuc.TTF "Trebucet MS"
ww_register_font Trebucbd.TTF "Trebucet MS Bold"
ww_register_font Trebucbi.TTF "Trebucet MS Bold Italic"
ww_register_font Trebucit.TTF "Trebucet MS Italic"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/verdan32.exe
ww_cp "$WW_TEMP"/Verdana*.TTF "$WW_FONTS"
ww_register_font Verdana.TTF "Verdana"
ww_register_font Verdanab.TTF "Verdana Bold"
ww_register_font Verdanaz.TTF "Verdana Bold Italic"
ww_register_font Verdanai.TTF "Verdana Italic"
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/webdin32.exe
ww_cp "$WW_TEMP"/Webdings.TTF "$WW_FONTS"
ww_register_font Webdings.TTF "Webdings"
}

#---------------------------------------------------------------------------------------

ww_install_crypt32()
{
ww_install msasn1
ww_xpsp3_helper i386/crypt32.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/crypt32.dl_
ww_override native crypt32
}

#---------------------------------------------------------------------------------------

ww_install_d3dcompiler_43()
{
dllname=d3dcompiler_43
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x86*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F "$dllname.dll" "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x64*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F "$dllname.dll" "$x"
done
ww_override native $dllname
}

#---------------------------------------------------------------------------------------

ww_install_d3drm()
{
ww_cabextract -d "$WW_TEMP" -L -F "dxnt.cab" "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F "d3drm.dll" "$WW_TEMP/dxnt.cab"
ww_override native d3drm
}

#---------------------------------------------------------------------------------------

ww_install_d3dx10()
{
ww_cabextract -d "$WW_TEMP" -L -F '*d3dx10*x86*' "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'd3dx10*.dll' "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F '*d3dx10*x64*' "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'd3dx10*.dll' "$x"
done
ww_override native d3dx10_33 d3dx10_34 d3dx10_35 d3dx10_36 d3dx10_37
ww_override native d3dx10_38 d3dx10_39 d3dx10_40 d3dx10_41 d3dx10_42 d3dx10_43
}

#---------------------------------------------------------------------------------------

ww_install_d3dx10_43()
{
dllname=d3dx10_43
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x86*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F "$dllname.dll" "$x"
done
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F "$dllname.dll" "$x"
done
ww_override native $dllname
}

#---------------------------------------------------------------------------------------

ww_install_d3dx11_42()
{
dllname=d3dx11_42
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x86*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F "$dllname.dll" "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x64*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F "$dllname.dll" "$x"
done
ww_override native $dllname
}

#---------------------------------------------------------------------------------------

ww_install_d3dx11_43()
{
dllname=d3dx11_43
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x86*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F "$dllname.dll" "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x64*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F "$dllname.dll" "$x"
done
ww_override native $dllname
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9()
{
ww_cabextract -d "$WW_TEMP" -L -F '*d3dx9*x86*' "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'd3dx9*.dll' "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F '*d3dx9*x64*' "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'd3dx9*.dll' "$x"
done
ww_override native d3dx9_24 d3dx9_25 d3dx9_26 d3dx9_27 d3dx9_28 d3dx9_29 d3dx9_30
ww_override native d3dx9_31 d3dx9_32 d3dx9_33 d3dx9_34 d3dx9_35 d3dx9_36 d3dx9_37
ww_override native d3dx9_38 d3dx9_39 d3dx9_40 d3dx9_41 d3dx9_42 d3dx9_43
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_26()
{
ww_d3dx_helper d3dx9_26
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_28()
{
ww_d3dx_helper d3dx9_28
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_31()
{
ww_d3dx_helper d3dx9_31
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_35()
{
ww_d3dx_helper d3dx9_35
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_36()
{
ww_d3dx_helper d3dx9_36
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_39()
{
ww_d3dx_helper d3dx9_39
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_42()
{
ww_d3dx_helper d3dx9_42
}

#---------------------------------------------------------------------------------------

ww_install_d3dx9_43()
{
dllname=d3dx9_43
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x86*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F "$dllname.dll" "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F "*$dllname*x64*" "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F "$dllname.dll" "$x"
done
ww_override native $dllname
}

#---------------------------------------------------------------------------------------

ww_install_d3dxof()
{
ww_cabextract -d "$WW_TEMP" -L -F 'dxnt.cab' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'd3dxof.dll' "$WW_TEMP/dxnt.cab"
ww_override native d3dxof
}

#---------------------------------------------------------------------------------------

ww_install_dbghelp()
{
ww_xpsp3_helper i386/dbghelp.dll
ww_cp "$WW_TEMP"/i386/dbghelp.dll "$WW_SYSTEM32"
ww_override native dbghelp
}

#---------------------------------------------------------------------------------------

ww_install_ddr_gdi()
{
ww_set_wined3d_var DirectDrawRenderer gdi
}

#---------------------------------------------------------------------------------------

ww_install_ddr_opengl()
{
ww_set_wined3d_var DirectDrawRenderer opengl
}

#---------------------------------------------------------------------------------------

ww_install_desktop_mode()
{
ww_set_virtual_desktop on "$WW_SCREEN_RES"
}

#---------------------------------------------------------------------------------------

ww_install_devenum()
{
ww_cabextract -d "$WW_TEMP" -L -F 'dxnt.cab' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'devenum.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr devenum.dll
ww_override native devenum
}

#---------------------------------------------------------------------------------------

ww_install_dinput()
{
ww_cabextract -d "$WW_TEMP" -L -F 'dxnt.cab' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dinput.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr dinput
ww_override native dinput
}

#---------------------------------------------------------------------------------------

ww_install_dinput8()
{
ww_cabextract -d "$WW_TEMP" -L -F 'dxnt.cab' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dinput8.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr dinput8
ww_override native dinput8
}

#---------------------------------------------------------------------------------------

ww_install_dirac()
{
ww_install vcrun2008
ww_cd_repo
ww_ahk "
    SetTitleMatchMode, 2
    run dirac.exe
    WinWait, Dirac, Welcome
    ControlClick, Button2
    WinWait, Dirac, License
    ControlClick, Button2
    WinWait, Dirac, Location
    ControlClick, Button2
    WinWait, Dirac, Components
    ControlClick, Button2
    WinWait, Dirac, environment
    ControlCLick, Button1
    WinWait, Dirac, installed
    ControlClick, Button2
    WinWaitClose
"
}

#---------------------------------------------------------------------------------------

ww_install_directmusic()
{
ww_install "dsound"
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'devenum.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmband.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmcompos.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmime.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmloader.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmscript.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmstyle.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmsynth.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmusic.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmusic32.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dswave.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'streamci.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'quartz.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr devenum.dll
ww_regsvr dmband.dll
ww_regsvr dmcompos.dll
ww_regsvr dmime.dll
ww_regsvr dmloader.dll
ww_regsvr dmscript.dll
ww_regsvr dmstyle.dll
ww_regsvr dmsynth.dll
ww_regsvr dmusic.dll
ww_regsvr dswave.dll
ww_regsvr quartz.dll
ww_override native devenum dmband dmcompos dmime dmloader dmscript dmstyle dmsynth dmusic dmusic32 dswave streamci quartz
}

#---------------------------------------------------------------------------------------

ww_install_directplay()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dplaysvr.exe' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dplayx.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpnet.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpnhpast.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpnsvr.exe' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpwsockx.dll' "$WW_TEMP/dxnt.cab"
ww_override native dplayx dpnet dpnhpast dpnsvr.exe dpwsockx
ww_regsvr dplayx.dll
ww_regsvr dpnet.dll
ww_regsvr dpnhpast.dll
}

#---------------------------------------------------------------------------------------

ww_install_directx9()
{
ww_warn "You probably shouldn't be using this. d3dx9 or, better, d3dx9_36 usually suffice."
ww_set_winver winxp
ww_cd_repo
WINEDLLOVERRIDES="winemenubuilder.exe=n;wintrust=b,mscoree=,ddraw,d3d8,d3d9,dsound,dinput=n" \
    ww_wine directx9.feb2010.exe /t:"$WW_TEMP_WIN" $WW_UNATTENDED_SLASH_Q
ww_override native d3dim d3drm d3dx8 d3dx9_24 d3dx9_25 d3dx9_26 d3dx9_27 d3dx9_28 d3dx9_29
ww_override native d3dx9_30 d3dx9_31 d3dx9_32 d3dx9_33 d3dx9_34 d3dx9_35 d3dx9_36 d3dx9_37
ww_override native d3dx9_38 d3dx9_39 d3dx9_40 d3dx9_41 d3dx9_42 d3dx9_43 d3dxof
ww_override native dciman32 ddrawex devenum dmband dmcompos dmime dmloader dmscript dmstyle
ww_override native dmsynth dmusic dmusic32 dnsapi dplay dplayx dpnaddr dpnet dpnhpast dpnlobby
ww_override native dswave dxdiagn msdmo qcap quartz streamci
ww_override native dxdiag.exe
ww_override builtin d3d8 d3d9 dinput dinput8 dsound
ww_wine "$WW_TEMP_WIN"\\DXSETUP.exe $WW_UNATTENDED_SLASH_SILENT
}

#---------------------------------------------------------------------------------------

ww_install_disable_d3dx11_42()
{
ww_override disabled d3dx11_42
}

#---------------------------------------------------------------------------------------

ww_install_disable_d3dx11_43()
{
ww_override disabled d3dx11_43
}

#---------------------------------------------------------------------------------------

ww_install_dmsynth()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dmsynth.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr dmsynth.dll
ww_override native dmsynth
}

#---------------------------------------------------------------------------------------

ww_install_dotnet20()
{
ww_remove_mono
ww_fontfix
ww_set_winver win2k
if ww_workaround_wine_bug 34803
then
    wine reg delete 'HKLM\Software\Microsoft\.NETFramework\v2.0.50727\SBSDisabled' /f
fi
ww_cd_repo
ww_try wine dotnet20.exe /q /c:"install.exe /q"
ww_unset_winver
rm -f "$WW_SYSTEM32"/msvc?80.dll
}

#---------------------------------------------------------------------------------------

ww_install_dotnet20sp1()
{
ww_remove_mono
ww_install dotnet20
WINEDLLOVERRIDES="winemenubuilder.exe=n"
ww_warn "Setting windows version so installer works"
wineserver -k
ww_set_winver win2k
wineserver -w
WINEDLLOVERRIDES="winemenubuilder.exe=n;ngen.exe,regsvcs.exe,mscorsvw.exe=b"
export WINEDLLOVERRIDES
wine reg add "HKLM\\Software\\Microsoft\\NET Framework Setup\\NDP\\v2.0.50727" /v Version /t REG_SZ /d "2.0.50727" /f
ww_cd_repo
wine dotnet20sp1.exe /q
status=$?
case $status in
    0) ;;
    105) echo "Exit status $status - normal, user selected 'restart now'" ;;
    194) echo "Exit status $status - normal, user selected 'restart later'" ;;
    *) ww_die "Exit status $status - dotnet20sp1 installation failed" ;;
esac
rm -f "$WW_SYSTEM32"/msvc?80.dll
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_dotnet20sp2()
{
ww_remove_mono
ww_install dotnet20
wineserver -w
if ww_workaround_wine_bug 34803
then
    wine reg delete 'HKLM\Software\Microsoft\.NETFramework\v2.0.50727\SBSDisabled' /f
fi
wineserver -w
ww_cd_repo
ww_ahk "
    SetTitleMatchMode, 2
    run, dotnet20sp2.exe /q /c:"install.exe /q"
    Loop
    {
        sleep 1000
        ifwinexist,, cannot be uninstalled
        {
            WinClose,, cannot be uninstalled
            continue
        }
        Process, exist, NetFx20SP2_x86.exe
        dotnet_pid = %ErrorLevel%
        if dotnet_pid = 0
        {
            break
        }
    }
"
status=$?
case $status in
    0) ;;
    105) echo "Exit status $status - normal, user selected 'restart now'" ;;
    194) echo "Exit status $status - normal, user selected 'restart later'" ;;
    *) ww_die "Exit status $status - dotnet20sp2 installation failed" ;;
esac
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_dotnet30()
{
ww_remove_mono
if test -f /proc/sys/kernel/yama/ptrace_scope
then
    case $(cat /proc/sys/kernel/yama/ptrace_scope) in
    0) ;;
    *) ww_warn "If install fails, set /proc/sys/kernel/yama/ptrace_scope to 0. See http://bugs.winehq.org/show_bug.cgi?id=30410" ;;
    esac
fi
ww_install dotnet20
ww_warn "Installing .net 3.0 runtime takes 3 minutes on a very fast machine, and the Finished dialog may hide in the taskbar."
LANGPACKS_BASE_PATH="$WW_WINDOWS/SYSMSICache/Framework/v3.0"
test -d "${LANGPACKS_BASE_PATH}" || mkdir -p "${LANGPACKS_BASE_PATH}"
for lang in ar cs da de el es 'fi' fr he it jp ko nb nl pl pt-BR pt-PT ru \
            sv tr zh-CHS zh-CHT
do
    ln -sf "${WW_SYSTEM32}/spupdsvc.exe" "${LANGPACKS_BASE_PATH}/dotnetfx3langpack${lang}.exe"
done
ww_set_winver winxp
wine sc delete "FontCache3.0.0.0"
WINEDLLOVERRIDES="winemenubuilder.exe=n;ngen.exe,mscorsvw.exe=b;$WINEDLLOVERRIDES"
ww_cd_repo
wine dotnet30.exe /q /c:"install.exe /q"
}

#---------------------------------------------------------------------------------------

ww_install_dotnet30sp1()
{
ww_remove_mono
ww_install dotnet30
wineserver -w
ww_install dotnet20sp1
wineserver -w
wine reg add "HKLM\\Software\\Microsoft\\Net Framework Setup\\NDP\\v3.0" /v Version /t REG_SZ /d "3.0" /f
wine reg add "HKLM\\Software\\Microsoft-\\Net Framework Setup\\NDP\\v3.0" /v SP /t REG_DWORD /d 0001 /f
ww_cd_repo
ww_try wine msiexec /i "dotnet30sp1.xpsep.msi" ${WW_UNATTENDED_SLASH_QB}
wine sc delete FontCache3.0.0.0
wine dotnet30sp1.exe /q
status=$?
ww_info dotnet30sp1.exe exited with status $status
}

#---------------------------------------------------------------------------------------

ww_install_dotnet35()
{
ww_warn "dotnet35 does not yet fully work or install on wine. Caveat emptor."
ww_remove_mono
ww_install dotnet30sp1
wineserver -w
if ww_workaround_wine_bug 33450 "Installing msxml3"  ,1.5.28
then
    ww_install msxml3
fi
wine reg delete "HKLM\\Software\\Microsoft\\NET Framework Setup\\NDP\\v3.5" /f
cd "$WW_TEMP"
ww_cabextract $WW_UNATTENDED_DASH_Q "$WW_CACHE"/dotnet35.exe
cd wcu/dotNetFramework
wine dotNetFx35setup.exe /lang:ENU $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_dotnet35sp1()
{
ww_warn "dotnet35sp1 does not yet fully work or install on wine. Caveat emptor."
ww_remove_mono
ww_install dotnet35
wineserver -w
ww_install dotnet20sp2
wineserver -w
WINEDLLOVERRIDES="winemenubuilder.exe=n;ngen.exe,mscorsvw.exe=b"
export WINEDLLOVERRIDES
ww_cd_repo
ww_ahk "
    SetTitleMatchMode, 2
    run, dotnet35sp1.exe /lang:ENU $WW_UNATTENDED_SLASH_Q
    Loop
    {
        sleep 1000
        ifwinexist,, cannot be uninstalled
        {
            WinClose,, cannot be uninstalled
            continue
        }
        Process, exist, dotnetfx35.exe
        dotnet_pid = %ErrorLevel%
        if dotnet_pid = 0
        {
            break
        }
    }
"
}

#---------------------------------------------------------------------------------------

ww_install_dotnet_verifier()
{
ww_cd_repo
ww_unzip "$WW_SYSTEM32" dotnet_verifier.zip netfx_setupverifier.exe
}

#---------------------------------------------------------------------------------------

ww_install_dpvoice()
{
ww_cabextract -d "$WW_TEMP" -L -F 'dxnt.cab' "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpvoice.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpvvox.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'dpvacm.dll' "$x"
done
ww_regsvr dpvoice.dll
ww_regsvr dpvvox.dll
ww_regsvr dpvacm.dll
ww_override native dpvoice
ww_override native dpvvox
ww_override native dpvacm
}

#---------------------------------------------------------------------------------------

ww_install_droid()
{
ww_droid_helper DroidSans-Bold.ttf        "Droid Sans Bold"
ww_droid_helper DroidSansFallback.ttf     "Droid Sans Fallback"
ww_droid_helper DroidSansJapanese.ttf     "Droid Sans Japanese"
ww_droid_helper DroidSansMono.ttf         "Droid Sans Mono"
ww_droid_helper DroidSans.ttf             "Droid Sans"
ww_droid_helper DroidSerif-BoldItalic.ttf "Droid Serif Bold Italic"
ww_droid_helper DroidSerif-Bold.ttf       "Droid Serif Bold"
ww_droid_helper DroidSerif-Italic.ttf     "Droid Serif Italic"
ww_droid_helper DroidSerif-Regular.ttf    "Droid Serif"
}

#---------------------------------------------------------------------------------------

ww_install_dsdmo()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dsdmo.dll' "$WW_TEMP/dxnt.cab"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dsdmoprp.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr dsdmo.dll
ww_regsvr dsdmoprp.dll
}

#---------------------------------------------------------------------------------------

ww_install_dsound()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'dsound.dll' "$WW_TEMP/dxnt.cab"
ww_regsvr dsound.dll
ww_override native dsound
}

#---------------------------------------------------------------------------------------

ww_install_dxdiag()
{
ww_install gmdls
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F "dxdiag.exe" "$WW_TEMP/dxnt.cab"
mkdir -p "$WW_WINDOWS/help"
ww_cabextract -d "$WW_WINDOWS/help" -L -F "dxdiag.chm" "$WW_TEMP/dxnt.cab"
ww_override native dxdiag.exe
if ww_workaround_wine_bug 1429
then
    ww_install dxdiagn
fi
if ww_workaround_wine_bug 9027
then
    ww_install directmusic
fi
}

#---------------------------------------------------------------------------------------

ww_install_dxdiagn()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F dxdiagn.dll "$WW_TEMP/dxnt.cab"
ww_override native dxdiagn
}

#---------------------------------------------------------------------------------------

ww_install_esent()
{
ww_win7sp1_helper x86_microsoft-windows-e..estorageengine-isam_31bf3856ad364e35_6.1.7601.17514_none_f3ebb0cc8a4dd814/esent.dll
ww_cp "$WW_TEMP/x86_microsoft-windows-e..estorageengine-isam_31bf3856ad364e35_6.1.7601.17514_none_f3ebb0cc8a4dd814/esent.dll" "$WW_SYSTEM32/esent.dll"
ww_override native,builtin esent
}

#---------------------------------------------------------------------------------------

ww_install_eufonts()
{
ww_cabextract -q -d "$WW_TEMP" "$WW_CACHE"/eufonts.exe
ww_cp "$WW_TEMP"/*.ttf "$WW_FONTS"
ww_register_font ArialBI.ttf "Arial Bold Italic"
ww_register_font ArialI.ttf "Arial Italic"
ww_register_font Arial.ttf "Arial"
ww_register_font TimesBd.ttf "Times New Roman Bold"
ww_register_font TimesBI.ttf "Times New Roman Bold Italic"
ww_register_font TimesI.ttf "Times New Roman Italic"
ww_register_font Times.ttf "Times New Roman"
ww_register_font trebucbd.ttf "Trebuchet Bold"
ww_register_font trebucbi.ttf "Trebuchet Bold Italic"
ww_register_font trebucit.ttf "Trebuchet Italic"
ww_register_font trebuc.ttf "Trebuchet"
ww_register_font Verdanab.ttf "Verdana Bold"
ww_register_font Verdanai.ttf "Verdana Italian"
ww_register_font Verdana.ttf "Verdana"
ww_register_font Verdanaz.ttf "Verdana Bold Italic"
}

#---------------------------------------------------------------------------------------

ww_install_fakechinese()
{
ww_install wenquanyi
ww_register_font_replacement "Microsoft JhengHei" "WenQuanYi Micro Hei"
ww_register_font_replacement "Microsoft YaHei" "WenQuanYi Micro Hei"
ww_register_font_replacement "SimHei" "WenQuanYi Micro Hei"
ww_register_font_replacement "DFKai-SB" "WenQuanYi Micro Hei"
ww_register_font_replacement "FangSong" "WenQuanYi Micro Hei"
ww_register_font_replacement "KaiTi" "WenQuanYi Micro Hei"
ww_register_font_replacement "PMingLiU" "WenQuanYi Micro Hei"
ww_register_font_replacement "MingLiU" "WenQuanYi Micro Hei"
ww_register_font_replacement "NSimSun" "WenQuanYi Micro Hei"
ww_register_font_replacement "SimKai" "WenQuanYi Micro Hei"
ww_register_font_replacement "SimSun" "WenQuanYi Micro Hei"
}

#---------------------------------------------------------------------------------------

ww_install_fakejapanese()
{
ww_install takao
ww_register_font_replacement "MS Gothic" "TakaoGothic"
ww_register_font_replacement "MS UI Gothic" "TakaoGothic"
ww_register_font_replacement "MS PGothic" "TakaoPGothic"
ww_register_font_replacement "MS Mincho" "TakaoMincho"
ww_register_font_replacement "MS PMincho" "TakaoPMincho"
}

#---------------------------------------------------------------------------------------

ww_install_fakejapanese_ipamona()
{
ww_install ipamona
jpname_msgothic="$(echo "xff2dxff33 x30b4x30b7x30c3x30af" | iconv -f utf8 -t cp932)"
jpname_mspgothic="$(echo "xff2dxff33 xff30x30b4x30b7x30c3x30af" | iconv -f utf8 -t cp932)"
jpname_msmincho="$(echo "xff2dxff33 x660ex671d" | iconv -f utf8 -t cp932)"
jpname_mspmincho="$(echo "xff2dxff33 xff30x660ex671d" | iconv -f utf8 -t cp932)"
ww_register_font_replacement "MS UI Gothic" "IPAMonaUIGothic"
ww_register_font_replacement "MS Gothic" "IPAMonaGothic"
ww_register_font_replacement "MS PGothic" "IPAMonaPGothic"
ww_register_font_replacement "MS Mincho" "IPAMonaMincho"
ww_register_font_replacement "MS PMincho" "IPAMonaPMincho"
ww_register_font_replacement "$jpname_msgothic" "IPAMonaGothic"
ww_register_font_replacement "$jpname_mspgothic" "IPAMonaPGothic"
ww_register_font_replacement "$jpname_msmincho" "IPAMonaMincho"
ww_register_font_replacement "$jpname_mspmincho" "IPAMonaPMincho"
}

#---------------------------------------------------------------------------------------

ww_install_fakekorean()
{
ww_install baekmuk
ww_register_font_replacement "Gulim" "Baekmuk Gulim"
ww_register_font_replacement "GulimChe" "Baekmuk Gulim"
ww_register_font_replacement "Batang" "Baekmuk Batang"
ww_register_font_replacement "BatangChe" "Baekmuk Batang"
ww_register_font_replacement "Dotum" "Baekmuk Dotum"
ww_register_font_replacement "DotumChe" "Baekmuk Dotum"
}

#---------------------------------------------------------------------------------------

ww_install_ffdshow()
{
ww_cd_repo_wine ffdshow.exe $WW_UNATTENDED_SLASH_SILENT
}

#---------------------------------------------------------------------------------------

ww_install_flash()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/flashplayer.ax.zip fp_14.0.0.176_archive/14_0_r0_176/flashplayer14_0r0_176_winax.exe
ww_cd "$WW_TEMP"/fp_14.0.0.176_archive/14_0_r0_176
ww_wine flashplayer14_0r0_176_winax.exe /install
ww_unzip "$WW_TEMP" "$WW_CACHE"/flashplayer.zip fp_14.0.0.179_archive/14_0_r0_179/flashplayer14_0r0_179_win.exe
ww_cd "$WW_TEMP"/fp_14.0.0.179_archive/14_0_r0_179
ww_wine flashplayer14_0r0_179_win.exe /install
ww_cp "$WW_CACHE/flashplayer.exe" "$WW_SYSTEM32/Macromed/Flash/flashplayer_14_sa.exe"
}

#---------------------------------------------------------------------------------------

ww_install_fontsmooth_bgr()
{
ww_set_fontsmooth bgr
}

#---------------------------------------------------------------------------------------

ww_install_fontsmooth_disable()
{
ww_set_fontsmooth disable
}

#---------------------------------------------------------------------------------------

ww_install_fontsmooth_gray()
{
ww_set_fontsmooth gray
}

#---------------------------------------------------------------------------------------

ww_install_fontsmooth_rgb()
{
ww_set_fontsmooth rgb
}

#---------------------------------------------------------------------------------------

ww_install_forcemono()
{
ww_override native mscoree
ww_override disabled mscorsvw.exe
}

#---------------------------------------------------------------------------------------

ww_install_gdiplus()
{
ww_win7sp1_helper x86_microsoft.windows.gdiplus_6595b64144ccf1df_1.1.7601.17514_none_72d18a4386696c80/gdiplus.dll
ww_cp "$WW_TEMP/x86_microsoft.windows.gdiplus_6595b64144ccf1df_1.1.7601.17514_none_72d18a4386696c80/gdiplus.dll" "$WW_SYSTEM32/gdiplus.dll"
ww_override native gdiplus
}

#---------------------------------------------------------------------------------------

ww_install_gdiplus_winxp()
{
ww_cabextract -d "$WW_TEMP" -F FL_gdiplus_dll_____X86.3643236F_FC70_11D3_A536_0090278A1BB8 "$WW_CACHE"/gdiplus_winxp.exe
ww_cp "$WW_TEMP/FL_gdiplus_dll_____X86.3643236F_FC70_11D3_A536_0090278A1BB8" "$WW_SYSTEM32/gdiplus.dll"
ww_override native gdiplus
}

#---------------------------------------------------------------------------------------

ww_install_gfw()
{
ww_cd_repo_wine gfw.exe /nodotnet $WW_UNATTENDED_SLASH_Q
ww_install msasn1
}

#---------------------------------------------------------------------------------------

ww_install_glidewrapper()
{
cat > "$WW_TEMP"/disable-browser.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\WineBrowser]
"Browsers"=""

_EOF_
ww_regedit "$WW_TEMP_WIN"\\disable-browser.reg
ww_cd_repo_wine glidewrapper.exe /S
wine reg delete "HKEY_CURRENT_USER\Software\Wine\WineBrowser" /v Browsers /f || true
}

#---------------------------------------------------------------------------------------

ww_install_glsl_disabled()
{
ww_set_wined3d_var UseGLSL disabled
}

#---------------------------------------------------------------------------------------

ww_install_glsl_enabled()
{
ww_set_wined3d_var UseGLSL enabled
}

#---------------------------------------------------------------------------------------

ww_install_glut()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/glut.zip
ww_try mv "$WW_TEMP/glut-3.7.6-bin" "$WW_C"
ww_cp "$WW_C"/glut-3.7.6-bin/glut32.dll "$WW_SYSTEM32"
ww_warn "If you want to compile glut programs, add $WW_C/glut-3.7.6-bin to LIB and INCLUDE"
}

#---------------------------------------------------------------------------------------

ww_install_gmdls()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/directx81.exe "*/*/DirectX.cab"
ww_cabextract -d "$WW_TEMP" -F gm16.dls "$WW_TEMP"/*/*/DirectX.cab
ww_try mv "$WW_TEMP"/gm16.dls "$WW_SYSTEM32"/drivers/gm.dls
ww_try cd "$WW_SYSTEM64"/drivers
ww_try ln -s ../../syswow64/drivers/gm.dls
}

#---------------------------------------------------------------------------------------

ww_install_grabfullscreen_n()
{
ww_set_grabfullscreen n
}

#---------------------------------------------------------------------------------------

ww_install_grabfullscreen_y()
{
ww_set_grabfullscreen y
}

#---------------------------------------------------------------------------------------

ww_install_gsm_0()
{
winetricks_set_wined3d_var MaxShaderModelGS 0
}

#---------------------------------------------------------------------------------------

ww_install_gsm_1()
{
winetricks_set_wined3d_var MaxShaderModelGS 1
}

#---------------------------------------------------------------------------------------

ww_install_gsm_2()
{
winetricks_set_wined3d_var MaxShaderModelGS 2
}

#---------------------------------------------------------------------------------------

ww_install_gsm_3()
{
winetricks_set_wined3d_var MaxShaderModelGS 3
}

#---------------------------------------------------------------------------------------

ww_install_heapcheck()
{
cat > "$WW_TEMP"/heapcheck.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager]
"GlobalFlag"=dword:00200030

_EOF_
ww_regedit "$WW_TEMP_WIN"\\heapcheck.reg
}

#---------------------------------------------------------------------------------------

ww_install_hid()
{
ww_win2ksp4_helper i386/hid.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/hid.dl_
ww_override native hid
}

#---------------------------------------------------------------------------------------

ww_install_hidewineexports_disable()
{
set_hidewineexports disable
}

#---------------------------------------------------------------------------------------

ww_install_hidewineexports_enable()
{
set_hidewineexports enable
}

#---------------------------------------------------------------------------------------

ww_install_hosts()
{
mkdir -p "$WW_WINDOWS"/system32/drivers/etc
touch "$WW_WINDOWS"/system32/drivers/etc/hosts
touch "$WW_WINDOWS"/system32/drivers/etc/services
}

#---------------------------------------------------------------------------------------

ww_install_icodecs()
{
ww_cd_repo
ww_ahk "
    SetTitleMatchMode, 2
    run icodecs.exe
    winwait, Welcome
    sleep 1000
    controlclick, Button1  ; Next
    winwait, Software License Agreement
    sleep 1000
    controlclick, Button2  ; Yes
    winwait, Setup Complete
    sleep 1000
    controlclick, Button4  ; Finish
    winwaitclose
"

ww_regsvr ir50_32.dll
}

#---------------------------------------------------------------------------------------

ww_install_ie6()
{
ww_install msls31
ww_cd "$WW_TEMP"
wine "$WW_CACHE"/ie60.exe
if [ ! -f "$WW_SYSTEM32"/plugin.ocx ]
then
    ww_override builtin iexplore.exe
    ww_wine iexplore -unregserver
fi
ww_override native,builtin iexplore.exe inetcpl.cpl itircl itss jscript mlang mshtml msimtf shdoclc shdocvw shlwapi
mv "$WW_PROGRAM_FILES"/"Internet Explorer"/iexplore.exe "$WW_PROGRAM_FILES"/"Internet Explorer"/iexplore.exe.bak
for dll in itircl itss jscript mlang mshtml msimtf shdoclc shdocvw shlwapi
do
    test -f "$WW_SYSTEM32"/$dll.dll &&
    mv "$WW_SYSTEM32"/$dll.dll "$WW_SYSTEM32"/$dll.dll.bak
done
ww_set_winver win2k
rm -f "$WW_SYSTEM32"/browseui.dll "$WW_SYSTEM32"/inseng.dll
rm -f "$WW_SYSTEM32"/inetcpl.cpl
ww_cabextract -F inseng.dll "$WW_TEMP/IE 6.0 Full/ACTSETUP.CAB"
mv inseng.dll "$WW_SYSTEM32"
ww_override native inseng
cd "$WW_TEMP/IE 6.0 Full"
wine IE6SETUP.EXE /q:a /r:n /c:"ie6wzd /S:""#e"" /q:a /r:n"
status=$?
case $status in
    0|194) ;;
    *) ww_die ie6 installation failed
esac
cd "$WW_SYSTEM32"
for i in actxprxy.dll browseui.dll browsewm.dll cdfview.dll ddraw.dll \
  dispex.dll dsound.dll iedkcs32.dll iepeers.dll iesetup.dll imgutil.dll \
  inetcomm.dll inetcpl.cpl inseng.dll isetup.dll jscript.dll laprxy.dll \
  mlang.dll mshtml.dll mshtmled.dll msi.dll msident.dll \
  msoeacct.dll msrating.dll mstime.dll msxml3.dll occache.dll \
  ole32.dll oleaut32.dll olepro32.dll pngfilt.dll quartz.dll \
  rpcrt4.dll rsabase.dll rsaenh.dll scrobj.dll scrrun.dll \
  shdocvw.dll shell32.dll vbscript.dll webcheck.dll \
  wshcon.dll wshext.dll asctrls.ocx hhctrl.ocx mscomct2.ocx \
  plugin.ocx proctexe.ocx tdc.ocx webcheck.dll wshom.ocx
do
    wine regsvr32 /i $i > /dev/null 2>&1
done
ww_unset_winver
ww_install pngfilt
}

#---------------------------------------------------------------------------------------

ww_install_ie7()
{
if grep -q -i "wine placeholder" "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe"
then
    ww_override builtin iexplore.exe
    ww_wine iexplore -unregserver
fi
ww_override native,builtin itircl itss jscript mshtml msimtf shdoclc shdocvw shlwapi urlmon wininet xmllite
ww_override native iexplore.exe
ww_override builtin updspapi
if [ -f "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe" ]
then
    mv "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe" "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe.bak"
fi
for dll in itircl itss jscript mshtml msimtf shdoclc shdocvw shlwapi urlmon
do
    test -f "$WW_SYSTEM32"/$dll.dll &&
    mv "$WW_SYSTEM32"/$dll.dll "$WW_SYSTEM32"/$dll.dll.bak
done
mkdir -p "$WW_SYSTEM32"/catroot/\{f750e6c3-38ee-11d1-85e5-00c04fc295ee\}
ww_cp "$WW_CACHE"/winetest.cat "$WW_SYSTEM32"/catroot/\{f750e6c3-38ee-11d1-85e5-00c04fc295ee\}/oem0.cat
if test -w /
then
    rm -f "$WINEPREFIX/dosdevices/z:.bak_wt"
    mv "$WINEPREFIX/dosdevices/z:" "$WINEPREFIX/dosdevices/z:.bak_wt"
fi
ww_cd_repo
wine ie7.exe $WW_UNATTENDED_SLASH_QUIET
status=$?
case $status in
    0) ;;
    105) echo "exit status $status - normal, user selected 'restart now'" ;;
    194) echo "exit status $status - normal, user selected 'restart later'" ;;
    *) ww_die "exit status $status - ie7 installation failed" ;;
esac
if test -w /
then
    mv "$WINEPREFIX/dosdevices/z:.bak_wt" "$WINEPREFIX/dosdevices/z:"
fi
ww_cd "$WW_SYSTEM32"
for i in actxprxy.dll browseui.dll browsewm.dll cdfview.dll ddraw.dll \
  dispex.dll dsound.dll iedkcs32.dll iepeers.dll iesetup.dll \
  imgutil.dll inetcomm.dll inseng.dll isetup.dll jscript.dll laprxy.dll \
  mlang.dll mshtml.dll mshtmled.dll msi.dll msident.dll \
  msoeacct.dll msrating.dll mstime.dll msxml3.dll occache.dll \
  ole32.dll oleaut32.dll olepro32.dll pngfilt.dll quartz.dll \
  rpcrt4.dll rsabase.dll rsaenh.dll scrobj.dll scrrun.dll \
  shdocvw.dll shell32.dll urlmon.dll vbscript.dll webcheck.dll \
  wshcon.dll wshext.dll asctrls.ocx hhctrl.ocx mscomct2.ocx \
  plugin.ocx proctexe.ocx tdc.ocx webcheck.dll wshom.ocx
do
    wine regsvr32 /i $i > /dev/null 2>&1
done
ww_warn "To start ie7, use the file '${WW_PROGRAM_FILES}/Internet Explorer/iexplore.exe'"
}

#---------------------------------------------------------------------------------------

ww_install_ie8()
{
if grep -q -i "wine placeholder" "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe"
then
    ww_override builtin iexplore.exe
    ww_wine iexplore -unregserver
fi
ww_install msls31
ww_override native,builtin itircl itss jscript msctf mshtml shdoclc shdocvw shlwapi urlmon wininet xmllite
ww_override native iexplore.exe
ww_override builtin updspapi
if [ -f "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe" ]
then
    mv "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe" "$WW_PROGRAM_FILES/Internet Explorer/iexplore.exe.bak"
fi
for dll in browseui.dll inseng.dll itircl itss jscript msctf mshtml shdoclc shdocvw shlwapi urlmon
do
    test -f "$WW_SYSTEM32"/$dll.dll &&
    mv "$WW_SYSTEM32"/$dll.dll "$WW_SYSTEM32"/$dll.dll.bak
done
mkdir -p "$WW_SYSTEM32"/catroot/\{f750e6c3-38ee-11d1-85e5-00c04fc295ee\}
ww_cp "$WW_CACHE"/winetest.cat "$WW_SYSTEM32"/catroot/\{f750e6c3-38ee-11d1-85e5-00c04fc295ee\}/oem0.cat
rm -f "$WINEPREFIX/dosdevices/z:.bak_wt"
mv "$WINEPREFIX/dosdevices/z:" "$WINEPREFIX/dosdevices/z:.bak_wt"
ww_cp "$WW_CACHE"/ie8.exe "$WW_TEMP"
cd "$WW_TEMP"
wine ie8.exe $WW_UNATTENDED_SLASH_QUIET /forcerestart
mv "$WINEPREFIX/dosdevices/z:.bak_wt" "$WINEPREFIX/dosdevices/z:"
cd "$WW_SYSTEM32"
for i in actxprxy.dll browseui.dll browsewm.dll cdfview.dll ddraw.dll \
  dispex.dll dsound.dll iedkcs32.dll iepeers.dll iesetup.dll \
  imgutil.dll inetcomm.dll isetup.dll jscript.dll laprxy.dll \
  mlang.dll msctf.dll mshtml.dll mshtmled.dll msi.dll msimtf.dll msident.dll \
  msoeacct.dll msrating.dll mstime.dll msxml3.dll occache.dll \
  ole32.dll oleaut32.dll olepro32.dll pngfilt.dll quartz.dll \
  rpcrt4.dll rsabase.dll rsaenh.dll scrobj.dll scrrun.dll \
  shdocvw.dll shell32.dll urlmon.dll vbscript.dll webcheck.dll \
  wshcon.dll wshext.dll asctrls.ocx hhctrl.ocx mscomct2.ocx \
  plugin.ocx proctexe.ocx tdc.ocx uxtheme.dll webcheck.dll wshom.ocx
do
    wine regsvr32 /i $i > /dev/null 2>&1
done
if ww_workaround_wine_bug 25648 "Setting TabProcGrowth=0 to avoid hang"
then
    cat > "$WW_TEMP"/set-tabprocgrowth.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main]
"TabProcGrowth"=dword:00000000

_EOF_
    ww_regedit "$WW_TEMP_WIN"\\set-tabprocgrowth.reg
fi
ww_warn "To start ie8, use the file '${WW_PROGRAM_FILES}/Internet Explorer/iexplore.exe'"
}

#---------------------------------------------------------------------------------------

ww_install_ie8_kb2936068()
{
ww_install ie8
ww_cd_repo
wine ie8_kb2936068.exe $WW_UNATTENDED_SLASH_QUIET /forcerestart
status=$?
case $status in
    0|194) ;;
    *) ww_die "ie8_kb2936068 installation failed"
esac
}

#---------------------------------------------------------------------------------------

ww_install_ipamona()
{
ww_cd "$WW_TEMP"
gunzip -dc "$WW_CACHE/ipamona.tar.gz" | tar -xf -
ww_try mv *IPAMonaFonts*/fonts/*.ttf "$WW_FONTS"
ww_register_font ipagui-mona.ttf "IPAMonaUIGothic"
ww_register_font ipag-mona.ttf "IPAMonaGothic"
ww_register_font ipagp-mona.ttf "IPAMonaPGothic"
ww_register_font ipam-mona.ttf "IPAMonaMincho"
ww_register_font ipamp-mona.ttf "IPAMonaPMincho"
}

#---------------------------------------------------------------------------------------

ww_install_jet40()
{
ww_cd_repo_wine jet40.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_l3codecx()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F 'l3codecx.ax' "$WW_TEMP/dxnt.cab"
ww_regsvr l3codecx.ax
}

#---------------------------------------------------------------------------------------

ww_install_liberation()
{
ww_cd "$WW_TEMP"
gunzip -dc "$WW_CACHE"/liberation.tar.gz | tar -xf -
mv liberation-fonts-1.04/*.ttf "$WW_FONTS"
ww_register_font LiberationMono-BoldItalic.ttf "LiberationMono-BoldItalic"
ww_register_font LiberationMono-Bold.ttf "LiberationMono-Bold"
ww_register_font LiberationMono-Italic.ttf "LiberationMono-Italic"
ww_register_font LiberationMono-Regular.ttf "LiberationMono-Regular"
ww_register_font LiberationSans-BoldItalic.ttf "LiberationSans-BoldItalic"
ww_register_font LiberationSans-Bold.ttf "LiberationSans-Bold"
ww_register_font LiberationSans-Italic.ttf "LiberationSans-Italic"
ww_register_font LiberationSans-Regular.ttf "LiberationSans-Regular"
ww_register_font LiberationSerif-BoldItalic.ttf "LiberationSerif-BoldItalic"
ww_register_font LiberationSerif-Bold.ttf "LiberationSerif-Bold"
ww_register_font LiberationSerif-Italic.ttf "LiberationSerif-Italic"
ww_register_font LiberationSerif-Regular.ttf "LiberationSerif-Regular"
}

#---------------------------------------------------------------------------------------

ww_install_lucida()
{
ww_cabextract -d "$WW_FONTS" -L -F 'lucon.ttf' "$WW_CACHE"/lucida.exe
ww_register_font lucon.ttf "Lucida Console"
}

#---------------------------------------------------------------------------------------

ww_install_mdac27()
{
ww_install native_mdac
ww_set_winver nt40
ww_cd_repo_wine mdac27.exe /q /C:"setup $WW_UNATTENDED_SLASH_QNT"
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_mdac28()
{
ww_install native_mdac
ww_set_winver nt40
ww_cd_repo_wine mdac28.exe /q /C:"setup $WW_UNATTENDED_SLASH_QNT"
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_mdx()
{
ww_cd "$WW_TEMP"
ww_cabextract -F "*MDX*" "$WW_DX_FEB_PATH"
ww_cabextract -F "*.cab" *Archive.cab
ww_cabextract -d "$WW_WINDOWS/Microsoft.NET/DirectX for Managed Code/1.0.2902.0" -F "microsoft.directx*" *MDX1_x86.cab
for file in mdx_*.cab
do
    ver="${file%%_x86.cab}"
    ver="${ver##mdx_}"
    ww_cabextract -d "$WW_WINDOWS/Microsoft.NET/DirectX for Managed Code/$ver" -F "microsoft.directx*" "$file"
done
ww_cabextract -d "$WW_WINDOWS/Microsoft.NET/DirectX for Managed Code/1.0.2911.0" -F "microsoft.directx.direct3dx*" *MDX1_x86.cab
ww_cd "$WW_WINDOWS/Microsoft.NET/DirectX for Managed Code"
for ver in *
do
    cd "$ver"
    for asm in *.dll
    do
        name="${asm%%.dll}"
        ww_try mkdir -p "$WW_WINDOWS/assembly/GAC/$name/${ver}__31bf3856ad364e35"
        ww_cp "$asm" "$WW_WINDOWS/assembly/GAC/$name/${ver}__31bf3856ad364e35"
    done
    cd -
done
cat > "$WW_TEMP"/asmfolders.reg <<_EOF_
REGEDIT4

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2902.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2902.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2903.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2903.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2904.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2904.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2905.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2905.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2906.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2906.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2907.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2907.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2908.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2908.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2909.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2909.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2910.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2910.0\\\\"

[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\AssemblyFolders\DX_1.0.2911.0]
@="C:\\\\windows\\\\Microsoft.NET\\\\DirectX for Managed Code\\\\1.0.2911.0\\\\"
_EOF_
ww_regedit "$WW_TEMP_WIN"\\asmfolders.reg
}

#---------------------------------------------------------------------------------------

ww_install_mf()
{
ww_win7sp1_helper x86_microsoft-windows-mediafoundation_31bf3856ad364e35_6.1.7601.17514_none_9e6699276b03c38e/mf.dll
ww_cp "$WW_TEMP/x86_microsoft-windows-mediafoundation_31bf3856ad364e35_6.1.7601.17514_none_9e6699276b03c38e/mf.dll" "$WW_SYSTEM32/mf.dll"
ww_override native,builtin mf
}

#---------------------------------------------------------------------------------------

ww_install_mfc40()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/mfc40.cab
ww_cabextract -d "$WW_SYSTEM32" -F *40.dll "$WW_TEMP"/mfc40.exe
}

#---------------------------------------------------------------------------------------

ww_install_mfc42()
{
ww_vcrun6_helper
ww_cabextract "$WW_TEMP"/vcredist.exe -d "$WW_SYSTEM32" -F "mfc42*.dll"
}

#---------------------------------------------------------------------------------------

ww_install_msacm32()
{
ww_xpsp3_helper i386/msacm32.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/msacm32.dl_
ww_override native,builtin msacm32
}

#---------------------------------------------------------------------------------------

ww_install_msasn1()
{
ww_win2ksp4_helper i386/msasn1.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/msasn1.dl_
}

#---------------------------------------------------------------------------------------

ww_install_msctf()
{
ww_xpsp3_helper i386/msctf.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/msctf.dl_
ww_override native,builtin msctf
}

#---------------------------------------------------------------------------------------

ww_install_msdxmocx()
{
ww_cabextract -d "$WW_SYSTEM32" "$WW_CACHE/msdxmocx.exe"
ww_regsvr msdxm.ocx
}

#---------------------------------------------------------------------------------------

ww_install_msflxgrd()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/msflxgrd.cab
ww_cp "$WW_TEMP"/[Mm][Ss][Ff][Ll][Xx][Gg][Rr][Dd].[Oo][Cc][Xx] "$WW_SYSTEM32"
ww_regsvr MSFLXGRD.OCX
}

#---------------------------------------------------------------------------------------

ww_install_msftedit()
{
ww_win7sp1_helper x86_microsoft-windows-msftedit_31bf3856ad364e35_6.1.7601.17514_none_d7d862f19573a5ff/msftedit.dll
ww_cp "$WW_TEMP/x86_microsoft-windows-msftedit_31bf3856ad364e35_6.1.7601.17514_none_d7d862f19573a5ff/msftedit.dll" "$WW_SYSTEM32/msftedit.dll"
ww_override native,builtin mstfedit
}

#---------------------------------------------------------------------------------------

ww_install_mshflxgd()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/mshflxgd.cab
ww_cp "$WW_TEMP"/[Mm][Ss][Hh][Ff][Ll][Xx][Gg][Dd].[Oo][Cc][Xx] "$WW_SYSTEM32"
ww_regsvr MSHFLXGD.OCX
}

#---------------------------------------------------------------------------------------

ww_install_msls31()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/msls31.exe
ww_cp "$WW_TEMP"/msls31.dll "$WW_SYSTEM32"
}

#---------------------------------------------------------------------------------------

ww_install_msmask()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/msmask.cab
ww_cp "$WW_TEMP"/[Mm][Ss][Mm][Aa][Ss][Kk]32.[Oo][Cc][Xx] "$WW_SYSTEM32"/msmask32.ocx
ww_regsvr msmask32.ocx
}

#---------------------------------------------------------------------------------------

ww_install_mspatcha()
{
ww_win2ksp4_helper i386/mspatcha.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/mspatcha.dl_

ww_override native,builtin mspatcha
}

#---------------------------------------------------------------------------------------

ww_install_msscript()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/msscript.exe
ww_cp "$WW_TEMP"/msscript.ocx "$WW_SYSTEM32"
ww_regsvr msscript.ocx
}

#---------------------------------------------------------------------------------------

ww_install_msvcirt()
{
ww_vcrun6_helper
ww_cabextract "$WW_TEMP"/vcredist.exe -d "$WW_SYSTEM32" -F msvcirt.dll
}

#---------------------------------------------------------------------------------------

ww_install_msxml3()
{
rm "$WW_SYSTEM32"/msxml3.dll
ww_override native msxml3
ww_cd_repo_wine msiexec /i msxml3.msi $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_msxml4()
{
ww_override native,builtin msxml4
ww_cd_repo_wine msiexec /i msxml4.msi $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_msxml6()
{
ww_override native,builtin msxml6
rm -f "$WW_SYSTEM32/msxml6.dll"
ww_wine msiexec /i "$WW_CACHE"/msxml6.msi $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_multisampling_disabled()
{
ww_set_wined3d_var Multisampling disabled
}

#---------------------------------------------------------------------------------------

ww_install_multisampling_enabled()
{
ww_set_wined3d_var Multisampling enabled
}

#---------------------------------------------------------------------------------------

ww_install_mwo_disable()
{
ww_set_mwo disable
}

#---------------------------------------------------------------------------------------

ww_install_mwo_enabled()
{
ww_set_mwo enabled
}

#---------------------------------------------------------------------------------------

ww_install_mwo_force()
{
ww_set_mwo force
}

#---------------------------------------------------------------------------------------

ww_install_native_mdac()
{
ww_override native,builtin odbc32 odbccp32 oledb32
}

#---------------------------------------------------------------------------------------

ww_install_native_oleaut32()
{
ww_override native,builtin oleaut32
}

#---------------------------------------------------------------------------------------

ww_install_nocrashdialog()
{
info "Disabling graphical crash dialog"
cat > "$WW_TEMP"/crashdialog.reg <<_EOF_
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\WineDbg]
"ShowCrashDialog"=dword:00000000

_EOF_
ww_regedit "$WW_TEMP_WIN\\crashdialog.reg"
}

#---------------------------------------------------------------------------------------

ww_install_npm_repack()
{
ww_set_wined3d_var NonPower2Mode repack
}

#---------------------------------------------------------------------------------------

ww_install_ogg()
{
ww_cd_repo_wine ogg.exe $WW_UNATTENDED_SLASH_S
}

#---------------------------------------------------------------------------------------

ww_install_opensymbol()
{
ww_cd "$WW_TEMP"
ww_try ar x "$WW_CACHE/opensymbol.deb" data.tar.xz
ww_try tar Jvxf data.tar.xz ./usr/share/fonts/truetype/openoffice/opens___.ttf
ww_try mv "$WW_TEMP/usr/share/fonts/truetype/openoffice/opens___.ttf" "$WW_FONTS"
ww_register_font opens___.ttf "OpenSymbol"
}

#---------------------------------------------------------------------------------------

ww_install_orm_backbuffer()
{
ww_set_wined3d_var OffscreenRenderingMode backbuffer
}

#---------------------------------------------------------------------------------------

ww_install_orm_fbo()
{
ww_set_wined3d_var OffscreenRenderingMode fbo
}

#---------------------------------------------------------------------------------------

ww_install_pdh()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/pdh.exe
ww_unzip "$WW_TEMP" "$WW_TEMP"/pdh.exe
ww_cp "$WW_TEMP"/x86/Pdh.Dll "$WW_SYSTEM32"/pdh.dll
}

#---------------------------------------------------------------------------------------

ww_install_physx()
{
ww_cd_repo_wine msiexec /i physx.msi $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_pngfilt()
{
ww_cabextract -d "$WW_SYSTEM32" -L -F pngfilt.dll "$WW_CACHE"/pngfilt.exe
ww_regsvr pngfilt.dll
}

#---------------------------------------------------------------------------------------

ww_install_postinstall_script()
{
echo "Special script started..."
eval "$(cat "$WW_CACHE"/linux32.special)"
ww_special_script_execute $WW_APP_ID post
echo "Special script finished"
}

#---------------------------------------------------------------------------------------

ww_install_preinstall_script()
{
echo "Special script started..."
eval "$(cat "$WW_CACHE"/linux32.special)"
ww_special_script_execute $WW_APP_ID pre
echo "Special script finished"
}

#---------------------------------------------------------------------------------------

ww_install_psm_0()
{
ww_set_wined3d_var MaxShaderModelPS 0
}

#---------------------------------------------------------------------------------------

ww_install_psm_1()
{
ww_set_wined3d_var MaxShaderModelPS 1
}

#---------------------------------------------------------------------------------------

ww_install_psm_2()
{
ww_set_wined3d_var MaxShaderModelPS 2
}

#---------------------------------------------------------------------------------------

ww_install_psm_3()
{
ww_set_wined3d_var MaxShaderModelPS 3
}

#---------------------------------------------------------------------------------------

ww_install_python26()
{
if [ "$WW_WINE_VERSION" = "wine-1.4.1" ]
then
    ww_die "This installer is broken under $WW_WINE_VERSION. Please set another Wine. See https://code.google.com/p/winetricks/issues/detail?id=347 for more info."
fi
ww_cd_repo_wine msiexec /i python26.msi ALLUSERS=1 $WW_UNATTENDED_SLASH_Q
ww_ahk "
    SetTitleMatchMode, 2
    run python26.exe
    WinWait, Setup, Wizard will install pywin32
    ControlClick Button2
    WinWait, Setup, Python 2.6 is required
    ControlClick Button3
    WinWait, Setup, Click Next to begin
    ControlClick Button3
    WinWait, Setup, finished
    ControlClick Button4
    WinWaitClose
"
}

#---------------------------------------------------------------------------------------

ww_install_qdvd()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F qdvd.dll "$WW_TEMP/dxnt.cab"
ww_regsvr qdvd.dll
ww_override native qdvd
}

#---------------------------------------------------------------------------------------

ww_install_quartz()
{
ww_cabextract -d "$WW_TEMP" -L -F dxnt.cab "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_SYSTEM32" -L -F quartz.dll "$WW_TEMP/dxnt.cab"
ww_regsvr quartz.dll
ww_override native quartz
}

#---------------------------------------------------------------------------------------

ww_install_quicktime72()
{
ww_cd_repo_wine quicktime72.exe ALLUSERS=1 DESKTOP_SHORTCUTS=0 QTTaskRunFlags=0 QTINFO.BISQTPRO=1 SCHEDULE_ASUW=0 REBOOT_REQUIRED=No $WW_UNATTENDED_SLASH_QN > /dev/null 2>&1
if ww_workaround_wine_bug 11681
then
    ww_warn "In Quicktime preferences, check Advanced / Safe Mode (gdi), or movies won't play."
fi
}

#---------------------------------------------------------------------------------------

ww_install_quicktime76()
{
ww_cd_repo_wine quicktime76.exe ALLUSERS=1 DESKTOP_SHORTCUTS=0 QTTaskRunFlags=0 QTINFO.BISQTPRO=1 SCHEDULE_ASUW=0 REBOOT_REQUIRED=No $WW_UNATTENDED_SLASH_QN > /dev/null 2>&1

if ww_workaround_wine_bug 11681
then
    ww_warn "In Quicktime preferences, check Advanced / Safe Mode (gdi), or movies won't play."
fi
}

#---------------------------------------------------------------------------------------

ww_install_riched20()
{
ww_win2ksp4_helper i386/riched20.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/riched20.dl_
ww_override native,builtin riched20
ww_install msls31
}

#---------------------------------------------------------------------------------------

ww_install_riched30()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/instmsia.exe
ww_cp "$WW_TEMP"/riched20.dll "$WW_SYSTEM32"
ww_cp "$WW_TEMP"/msls31.dll "$WW_SYSTEM32"
ww_override native,builtin riched20
}

#---------------------------------------------------------------------------------------

ww_install_richtx32()
{
ww_cabextract "$WW_CACHE"/richtx32.cab -d "$WW_SYSTEM32" -F RichTx32.ocx
ww_regsvr RichTx32.ocx
}

#---------------------------------------------------------------------------------------

ww_install_rtlm_auto()
{
ww_set_wined3d_var RenderTargetLockMode auto
}

#---------------------------------------------------------------------------------------

ww_install_rtlm_disabled()
{
ww_set_wined3d_var RenderTargetLockMode disabled
}

#---------------------------------------------------------------------------------------

ww_install_rtlm_readdraw()
{
ww_set_wined3d_var RenderTargetLockMode readdraw
}

#---------------------------------------------------------------------------------------

ww_install_rtlm_readtex()
{
ww_set_wined3d_var RenderTargetLockMode readtex
}

#---------------------------------------------------------------------------------------

ww_install_rtlm_texdraw()
{
ww_set_wined3d_var RenderTargetLockMode texdraw
}

#---------------------------------------------------------------------------------------

ww_install_rtlm_textex()
{
ww_set_wined3d_var RenderTargetLockMode textex
}

#---------------------------------------------------------------------------------------

ww_install_sdl()
{
ww_unzip "$WW_SYSTEM32" "$WW_CACHE"/sdl.zip SDL.dll
}

#---------------------------------------------------------------------------------------

ww_install_secur32()
{
ww_cabextract "$WW_CACHE"/secur32.exe -d "$WW_SYSTEM32" -F secur32.dll
ww_override native,builtin secur32
}

#---------------------------------------------------------------------------------------

ww_install_setupapi()
{
ww_xpsp3_helper i386/setupapi.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/setupapi.dl_
ww_override native,builtin setupapi
}

#---------------------------------------------------------------------------------------

ww_install_shockwave()
{
ww_cd_repo_wine msiexec /i shockwave.msi $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_sound_alsa()
{
ww_set_sound alsa
}

#---------------------------------------------------------------------------------------

ww_install_sound_coreaudio()
{
ww_set_sound coreaudio
}

#---------------------------------------------------------------------------------------

ww_install_sound_disabled()
{
ww_set_sound disabled
}

#---------------------------------------------------------------------------------------

ww_install_sound_oss()
{
ww_set_sound oss
}

#---------------------------------------------------------------------------------------

ww_install_sound_pulse()
{
ww_set_sound pulse
}

#---------------------------------------------------------------------------------------

ww_install_speechsdk()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/speechsdk.exe
ww_set_winver win2k
ww_cd "$WW_TEMP"
ww_wine msiexec /i "Microsoft Speech SDK 5.1.msi" $WW_UNATTENDED_SLASH_Q
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_strictdrawordering_disabled()
{
ww_set_wined3d_var StrictDrawOrdering disabled
}

#---------------------------------------------------------------------------------------

ww_install_strictdrawordering_enabled()
{
ww_set_wined3d_var StrictDrawOrdering enabled
}

#---------------------------------------------------------------------------------------

ww_install_tabctl32()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/tabctl32.cab
ww_cp "$WW_TEMP"/[Tt][Aa][Bb][Cc][Tt][Ll][3][2].[Oo][Cc][Xx] "$WW_SYSTEM32"
ww_regsvr tabctl32.ocx
}

#---------------------------------------------------------------------------------------

ww_install_tahoma()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/tahoma.exe
ww_cp "$WW_TEMP"/Tahoma.TTF "$WW_FONTS"/tahoma.ttf
ww_cp "$WW_TEMP"/Tahomabd.TTF "$WW_FONTS"/tahomabd.ttf
ww_register_font tahoma.ttf "Tahoma"
ww_register_font tahomabd.ttf "Tahoma Bold"
chmod +w "$WW_FONTS"/tahoma*.ttf
}

#---------------------------------------------------------------------------------------

ww_install_takao()
{
ww_cp "$WW_CACHE"/takao.zip "$WW_TEMP"
ww_unzip "$WW_TEMP" "$WW_TEMP"/takao.zip
ww_cp "$WW_TEMP"/takao-fonts-ttf-003.02.01/*.ttf "$WW_FONTS"
ww_register_font TakaoGothic.ttf "TakaoGothic"
ww_register_font TakaoPGothic.ttf "TakaoPGothic"
ww_register_font TakaoMincho.ttf "TakaoMincho"
ww_register_font TakaoPMincho.ttf "TakaoPMincho"
ww_register_font TakaoExGothic.ttf "TakaoExGothic"
ww_register_font TakaoExMincho.ttf "TakaoExMincho"
}

#---------------------------------------------------------------------------------------

ww_install_uff()
{
ww_cd "$WW_TEMP"
ww_unzip . "$WW_CACHE"/uff.zip
mv ubuntu-font-family-0.70.1/*.ttf "$WW_FONTS"
ww_register_font Ubuntu-R.ttf "Ubuntu"
ww_register_font Ubuntu-I.ttf "Ubuntu Italic"
ww_register_font Ubuntu-B.ttf "Ubuntu Bold"
ww_register_font Ubuntu-BI.ttf "Ubuntu Bold Italic"
}

#---------------------------------------------------------------------------------------

ww_install_unifont()
{
cp -f "$WW_CACHE"/unifont.zip "$WW_TEMP"
ww_unzip "$WW_TEMP" "$WW_TEMP"/unifont.zip
ww_cp "$WW_TEMP"/unifont-5.1.20080907.ttf "$WW_FONTS/unifont.ttf"
ww_register_font unifont.ttf "Unifont"
ww_register_font_replacement "Arial Unicode MS" "Unifont"
}

#---------------------------------------------------------------------------------------

ww_install_updspapi()
{
ww_xpsp3_helper i386/update/updspapi.dll
ww_cp "$WW_TEMP"/i386/update/updspapi.dll "$WW_SYSTEM32"
ww_override native,builtin updspapi
}

#---------------------------------------------------------------------------------------

ww_install_usp10()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE"/instmsia.exe
ww_cp "$WW_TEMP"/usp10.dll "$WW_SYSTEM32"
ww_override native,builtin usp10
}

#---------------------------------------------------------------------------------------

ww_install_vb2run()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/vb2run.exe
ww_cp "$WW_TEMP/VBRUN200.DLL" "$WW_SYSTEM32"
}

#---------------------------------------------------------------------------------------

ww_install_vb3run()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/vb3run.exe
ww_cp "$WW_TEMP/Vbrun300.dll" "$WW_SYSTEM32"
}

#---------------------------------------------------------------------------------------

ww_install_vb4run()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/vb4run.exe
ww_cp "$WW_TEMP/Vb40032.dll" "$WW_SYSTEM32"
ww_cp "$WW_TEMP/Vb40016.dll" "$WW_SYSTEM32"
}

#---------------------------------------------------------------------------------------

ww_install_vb5run()
{
ww_cd_repo_wine vb5run.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_vb6run()
{
ww_wine "$WW_CACHE"/vb6run.exe "/T:$WW_TEMP_WIN" /c $WW_UNATTENDED_SLASH_Q
ww_exists "$WW_TEMP"/vbrun60sp6.exe || ww_die vbrun60sp6.exe not found
rm -f "$WW_SYSTEM32"/comcat.dll
rm -f "$WW_SYSTEM32"/oleaut32.dll
rm -f "$WW_SYSTEM32"/olepro32.dll
rm -f "$WW_SYSTEM32"/stdole2.tlb
ww_cd "$WW_TEMP"
wine vbrun60sp6.exe $WW_UNATTENDED_SLASH_Q
status=$?
case $status in
    0|43) ;;
    *) ww_die vb6run installation failed
esac
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2003()
{
ww_unzip "$WW_TEMP" "$WW_CACHE"/mfc71.zip
ww_unzip "$WW_TEMP" "$WW_CACHE"/msvcp71.zip
ww_unzip "$WW_TEMP" "$WW_CACHE"/msvcr71.zip
ww_cp "$WW_TEMP"/MSVCP71.DLL "$WW_SYSTEM32"/msvcp71.dll
ww_cp "$WW_TEMP"/msvcr71.dll "$WW_SYSTEM32"
ww_cp "$WW_TEMP"/mfc71.dll "$WW_SYSTEM32"
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2005()
{
ww_override native,builtin atl80 msvcm80 msvcp80 msvcr80 vcomp
ww_cd_repo_wine vcrun2005.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2008()
{
ww_override native,builtin atl90 msvcm90 msvcp90 msvcr90 vcomp90
ww_cd_repo_wine vcrun2008.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2010()
{
ww_override native,builtin msvcp100 msvcr100 vcomp100 atl100
ww_cd_repo_wine vcrun2010.exe $WW_UNATTENDED_SLASH_Q
if ww_workaround_wine_bug 30713 "Manually extracting the 64-bit dlls"
then
    ww_cabextract --directory="$WW_TEMP" vcrun2010.x64.exe -F '*.cab'
    ww_cabextract --directory="$WW_TEMP" "$WW_TEMP"/vc_red.cab
    cp "$WW_TEMP"/F_CENTRAL_mfc100_x64 "$WW_SYSTEM64"/mfc100.dll
    cp "$WW_TEMP"/F_CENTRAL_mfc100u_x64 "$WW_SYSTEM64"/mfc100u.dll
    cp "$WW_TEMP"/F_CENTRAL_msvcr100_x64 "$WW_SYSTEM64"/msvcr100.dll
    cp "$WW_TEMP"/F_CENTRAL_msvcp100_x64 "$WW_SYSTEM64"/msvcp100.dll
    cp "$WW_TEMP"/F_CENTRAL_vcomp100_x64 "$WW_SYSTEM64"/vcomp100.dll
    cp "$WW_TEMP"/F_CENTRAL_atl100_x64 "$WW_SYSTEM64"/atl100.dll
else
    ww_try wine vcrun2010.x64.exe $WW_UNATTENDED_SLASH_Q
fi
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2012()
{
ww_override native,builtin atl110 msvcp110 msvcr110 vcomp110
ww_cd_repo_wine vcrun2012.exe $WW_UNATTENDED_SLASH_Q
if ww_workaround_wine_bug 30713 "Manually extracting the 64-bit dlls"
then
    rm -f "$WW_TEMP"/*
    ww_cabextract --directory="$WW_TEMP" vcrun2012.x64.exe
    ww_cabextract --directory="$WW_TEMP" "$WW_TEMP/a2"
    ww_cabextract --directory="$WW_TEMP" "$WW_TEMP/a3"
    cp "$WW_TEMP"/F_CENTRAL_atl110_x64 "$WW_SYSTEM64"/atl110.dll
    cp "$WW_TEMP"/F_CENTRAL_mfc110_x64 "$WW_SYSTEM64"/mfc110.dll
    cp "$WW_TEMP"/F_CENTRAL_mfc110u_x64 "$WW_SYSTEM64"/mfc110u.dll
    cp "$WW_TEMP"/F_CENTRAL_msvcp110_x64 "$WW_SYSTEM64"/msvcp110.dll
    cp "$WW_TEMP"/F_CENTRAL_msvcr110_x64 "$WW_SYSTEM64"/msvcr110.dll
    cp "$WW_TEMP"/F_CENTRAL_vcomp110_x64 "$WW_SYSTEM64"/vcomp110.dll
else
    ww_try wine vcrun2012.x64.exe $WW_UNATTENDED_SLASH_Q
fi
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2013()
{
ww_override native,builtin atl120 msvcp120 msvcr120 vcomp120
ww_cd_repo_wine vcrun2013.exe $WW_UNATTENDED_SLASH_Q
if w_workaround_wine_bug 30713 "Manually extracting the 64-bit dlls"
then
    rm -f "$WW_TEMP"/*
    wW_cabextract --directory="$WW_TEMP" vcrun2013.x64.exe
    wW_cabextract --directory="$WW_TEMP" "$WW_TEMP/a2"
    wW_cabextract --directory="$WW_TEMP" "$WW_TEMP/a3"
    cp "$WW_TEMP"/F_CENTRAL_mfc120_x64 "$WW_SYSTEM64"/mfc120.dll
    cp "$WW_TEMP"/F_CENTRAL_mfc120u_x64 "$WW_SYSTEM64"/mfc120u.dll
    cp "$WW_TEMP"/F_CENTRAL_msvcp120_x64 "$WW_SYSTEM64"/msvcp120.dll
    cp "$WW_TEMP"/F_CENTRAL_msvcr120_x64 "$WW_SYSTEM64"/msvcr120.dll
    cp "$WW_TEMP"/F_CENTRAL_vcomp120_x64 "$WW_SYSTEM64"/vcomp120.dll
else
    ww_try wine vcrun2013.x64.exe $WW_UNATTENDED_SLASH_Q
fi
}

#---------------------------------------------------------------------------------------

ww_install_vcrun2015()
{
ww_override native,builtin api-ms-win-crt-conio-l1-1-0 api-ms-win-crt-heap-l1-1-0 api-ms-win-crt-locale-l1-1-0 api-ms-win-crt-math-l1-1-0 api-ms-win-crt-runtime-l1-1-0 api-ms-win-crt-stdio-l1-1-0 atl140 msvcp140 msvcr140 ucrtbase vcomp140 vcruntime140
ww_cd_repo_wine vcrun2015.exe $WW_UNATTENDED_SLASH_Q
if ww_workaround_wine_bug 30713 "Manually extracting the 64-bit dlls"
then
    rm -f "$WW_TEMP"/*  # Avoid permission error
    ww_cabextract --directory="$WW_TEMP" vcrun2015.x64.exe
    ww_cabextract --directory="$WW_TEMP" "$WW_TEMP/a10"
    ww_cabextract --directory="$WW_TEMP" "$WW_TEMP/a11"
    cp "$WW_TEMP"/concrt140.dll "$WW_SYSTEM64"/concrt140.dll
    cp "$WW_TEMP"/mfc140.dll "$WW_SYSTEM64"/mfc140.dll
    cp "$WW_TEMP"/mfc140u.dll "$WW_SYSTEM64"/mfc140u.dll
    cp "$WW_TEMP"/mfcm140.dll "$WW_SYSTEM64"/mfcm140.dll
    cp "$WW_TEMP"/mfcm140u.dll "$WW_SYSTEM64"/mfcm140u.dll
    cp "$WW_TEMP"/msvcp140.dll "$WW_SYSTEM64"/msvcp140.dll
    cp "$WW_TEMP"/vcamp140.dll "$WW_SYSTEM64"/vcamp140.dll
    cp "$WW_TEMP"/vccorlib140.dll "$WW_SYSTEM64"/vccorlib140.dll
    cp "$WW_TEMP"/vcomp140.dll "$WW_SYSTEM64"/vcomp140.dll
    cp "$WW_TEMP"/vcruntime140.dll "$WW_SYSTEM64"/vcruntime140.dll
    cp "$WW_TEMP"/api_ms_win_crt_conio_l1_1_0.dll "$WW_SYSTEM64"/api-ms-win-crt-conio-l1-1-0.dll
    cp "$WW_TEMP"/api_ms_win_crt_heap_l1_1_0.dll "$WW_SYSTEM64"/api-ms-win-crt-heap-l1-1-0.dll
    cp "$WW_TEMP"/api_ms_win_crt_locale_l1_1_0.dll "$WW_SYSTEM64"/api-ms-win-crt-locale-l1-1-0.dll
    cp "$WW_TEMP"/api_ms_win_crt_math_l1_1_0.dll "$WW_SYSTEM64"/api-ms-win-crt-math-l1-1-0.dll
    cp "$WW_TEMP"/api_ms_win_crt_runtime_l1_1_0.dll "$WW_SYSTEM64"/api-ms-win-crt-runtime-l1-1-0.dll
    cp "$WW_TEMP"/api_ms_win_crt_stdio_l1_1_0.dll "$WW_SYSTEM64"/api-ms-win-crt-stdio-l1-1-0.dll
    cp "$WW_TEMP"/ucrtbase.dll "$WW_SYSTEM64"/ucrtbase.dll
else
    ww_try wine vc_redist.x64.exe $WW_UNATTENDED_SLASH_Q
fi
}

#---------------------------------------------------------------------------------------

ww_install_vcrun6()
{
ww_vcrun6_helper
rm -f "$WW_SYSTEM32"/comcat.dll
rm -f "$WW_SYSTEM32"/msvcrt.dll
rm -f "$WW_SYSTEM32"/oleaut32.dll
rm -f "$WW_SYSTEM32"/olepro32.dll
rm -f "$WW_SYSTEM32"/stdole2.tlb
wine "$WW_TEMP"/vcredist.exe
status=$?
case $status in
    0|43) ;;
    *) ww_die vcrun6 installation failed
esac
ww_cabextract "$WW_TEMP"/vcredist.exe -d "$WW_SYSTEM32" -F "mfc42*.dll"
}

#---------------------------------------------------------------------------------------

ww_install_vcrun6sp6()
{
ww_cabextract "$WW_CACHE"/vcrun6sp6.exe -d "$WW_TEMP" -F vcredist.exe
ww_try rm -f "$WW_SYSTEM32"/comcat.dll
ww_try rm -f "$WW_SYSTEM32"/msvcrt.dll
ww_try rm -f "$WW_SYSTEM32"/oleaut32.dll
ww_try rm -f "$WW_SYSTEM32"/olepro32.dll
ww_try rm -f "$WW_SYSTEM32"/stdole2.tlb
ww_cd "$WW_TEMP"
wine vcredist.exe
status=$?
case $status in
    0|43) ;;
    *) ww_die "vcrun6sp6 installation failed"
esac
ww_cabextract vcredist.exe -d "$WW_SYSTEM32" -F mfc42u.dll
}

#---------------------------------------------------------------------------------------

ww_install_videomemorysize()
{
ww_set_videomemorysize "$WW_VMEMORY_SIZE"
}

#---------------------------------------------------------------------------------------

ww_install_vjrun20()
{
ww_install dotnet20
ww_cd_repo_wine vjrun20.exe /q /C:"install $WW_UNATTENDED_SLASH_QNT"
}

#---------------------------------------------------------------------------------------

ww_install_vsm_0()
{
ww_set_wined3d_var MaxShaderModelVS 0
}

#---------------------------------------------------------------------------------------

ww_install_vsm_1()
{
ww_set_wined3d_var MaxShaderModelVS 1
}

#---------------------------------------------------------------------------------------

ww_install_vsm_2()
{
ww_set_wined3d_var MaxShaderModelVS 2
}

#---------------------------------------------------------------------------------------

ww_install_vsm_3()
{
ww_set_wined3d_var MaxShaderModelVS 3
}

#---------------------------------------------------------------------------------------

ww_install_wenquanyi()
{
ww_cd "$WW_TEMP"
gunzip -dc "$WW_CACHE/wenquanyi.tar.gz" | tar -xf -
ww_try mv wqy-microhei/wqy-microhei.ttc "$WW_FONTS"
ww_register_font wqy-microhei.ttc "WenQuanYi Micro Hei"
}

#---------------------------------------------------------------------------------------

ww_install_windowmanagerdecorated_n()
{
ww_set_windowmanagerdecorated n
}

#---------------------------------------------------------------------------------------

ww_install_windowmanagerdecorated_y()
{
ww_set_windowmanagerdecorated y
}

#---------------------------------------------------------------------------------------

ww_install_windowmanagermanaged_n()
{
ww_set_windowmanagermanaged n
}

#---------------------------------------------------------------------------------------

ww_install_windowmanagermanaged_y()
{
ww_set_windowmanagermanaged y
}

#---------------------------------------------------------------------------------------

ww_install_windowscodecs()
{
ww_try rm -f "$WW_SYSTEM32"/windowscodecs.dll "$WW_SYSTEM32"/windowscodecsext.dll "$WW_SYSTEM32"/photometadatahandler.dll
ww_override native windowscodecs windowscodecsext
if test -x /usr/bin/taskset && ww_workaround_wine_bug 32859 "Working around possibly broken libX11"
then
    TASKSET="taskset -c 0"
else
    TASKSET=""
fi
ww_cd_repo
ww_try $TASKSET wine windowscodecs.exe /passive
}

#---------------------------------------------------------------------------------------

ww_install_winhttp()
{
ww_win2ksp4_helper i386/new/winhttp.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/new/winhttp.dl_
ww_override native,builtin winhttp
}

#---------------------------------------------------------------------------------------

ww_install_wininet()
{
ww_win2ksp4_helper i386/wininet.dl_
ww_cabextract -d "$WW_SYSTEM32" "$WW_TEMP"/i386/wininet.dl_
ww_override native,builtin wininet
}

#---------------------------------------------------------------------------------------

ww_install_winver_nt40()
{
set_winver nt40
}

#---------------------------------------------------------------------------------------

ww_install_winver_vista()
{
set_winver vista
}

#---------------------------------------------------------------------------------------

ww_install_winver_win10()
{
ww_set_winver win10
}

#---------------------------------------------------------------------------------------

ww_install_winver_win2k()
{
ww_set_winver win2k
}

#---------------------------------------------------------------------------------------

ww_install_winver_win2k3()
{
ww_set_winver win2k3
}

#---------------------------------------------------------------------------------------

ww_install_winver_win2k8()
{
ww_set_winver win2k8
}

#---------------------------------------------------------------------------------------

ww_install_winver_win7()
{
ww_set_winver win7
}

#---------------------------------------------------------------------------------------

ww_install_winver_win8()
{
ww_set_winver win8
}

#---------------------------------------------------------------------------------------

ww_install_winver_win81()
{
ww_set_winver win81
}

#---------------------------------------------------------------------------------------

ww_install_winver_win98()
{
ww_set_winver win98
}

#---------------------------------------------------------------------------------------

ww_install_winver_winxp()
{
ww_set_winver winxp
}

#---------------------------------------------------------------------------------------

ww_install_wmi()
{
ww_set_winver win98
ww_override native,builtin wbemprox wmiutils
ww_cd_repo_wine wmi.exe $WW_UNATTENDED_SLASH_S
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_wmp10()
{
ww_install wsh57
ww_cd_repo_wine wmp10.exe $WW_UNATTENDED_SLASH_Q
ww_regedit /D "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Cdr4_2K"
ww_regedit /D "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Cdralw2k"
ww_wm9codecs
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_wmp9()
{
ww_install wsh57
ww_set_winver win2k
rm -f "$WW_SYSTEM32"/wmvcore.dll "$WW_SYSTEM32"/wmp.dll
ww_override native wmp
ww_override_app wmp9.exe native pidgen
ww_cd_repo_wine wmp9.exe $WW_UNATTENDED_SLASH_Q
ww_wm9codecs
ww_unset_winver
}

#---------------------------------------------------------------------------------------

ww_install_wmv9vcm()
{
ww_cabextract -d "$WW_TEMP" "$WW_CACHE/wmv9vcm.exe"
ww_cp "$WW_TEMP"/wm64/wmv9vcm.dll "$WW_SYSTEM32"
cat > "$WW_TEMP"/tmp.reg <<_EOF_
REGEDIT4
[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Drivers32]
"vidc.WMV3"="wmv9vcm.dll"

_EOF_
ww_regedit "$WW_TEMP_WIN"\\tmp.reg
}

#---------------------------------------------------------------------------------------

ww_install_wsh56js()
{
ww_override native,builtin jscript
ww_try rm "$WW_SYSTEM32/jscript.dll"
ww_cd_repo_wine wsh56js.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_wsh56vb()
{
ww_override native,builtin vbscript
ww_try rm "$WW_SYSTEM32/vbscript.dll"
ww_cd_repo_wine wsh56vb.exe $WW_UNATTENDED_SLASH_Q
}

#---------------------------------------------------------------------------------------

ww_install_wsh57()
{
ww_cabextract -d "$WW_SYSTEM32" "$WW_CACHE"/wsh57.exe
ww_override native,builtin jscript scrrun vbscript cscript.exe wscript.exe
ww_regsvr dispex.dll jscript.dll scrobj.dll scrrun.dll vbscript.dll wshcon.dll wshext.dll
}

#---------------------------------------------------------------------------------------

ww_install_xact()
{
ww_cabextract -d "$WW_TEMP" -L -F '*_xact_*x86*' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_x3daudio_*x86*' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_xaudio_*x86*' "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xactengine*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xaudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'x3daudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xapofx*.dll' "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F '*_xact_*x64*' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_x3daudio_*x64*' "$WW_DX_FEB_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_xaudio_*x64*' "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'xactengine*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'xaudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'x3daudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'xapofx*.dll' "$x"
done
for x in "$WW_SYSTEM32"/xactengine*
do
    ww_regsvr "$(basename "$x")"
done
for x in 0 1 2 3 4 5 6 7
do
    ww_regsvr "$(basename "$WW_SYSTEM32/xaudio2_${x}")"
done
}

#---------------------------------------------------------------------------------------

ww_install_xact_jun2010()
{
ww_cabextract -d "$WW_TEMP" -L -F '*_xact_*x86*' "$WW_DX_JUN_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_x3daudio_*x86*' "$WW_DX_JUN_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_xaudio_*x86*' "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xactengine*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xaudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'x3daudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xapofx*.dll' "$x"
done
ww_cabextract -d "$WW_TEMP" -L -F '*_xact_*x64*' "$WW_DX_JUN_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_x3daudio_*x64*' "$WW_DX_JUN_PATH"
ww_cabextract -d "$WW_TEMP" -L -F '*_xaudio_*x64*' "$WW_DX_JUN_PATH"
for x in "$WW_TEMP"/*x64.cab
do
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'xactengine*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'xaudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'x3daudio*.dll' "$x"
    ww_cabextract -d "$WW_SYSTEM64" -L -F 'xapofx*.dll' "$x"
done
for x in "$WW_SYSTEM32"/xactengine*
do
    ww_regsvr "$(basename "$x")"
done
for x in 0 1 2 3 4 5 6 7
do
    ww_regsvr "$(basename "$WW_SYSTEM32/xaudio2_${x}")"
done
}

#---------------------------------------------------------------------------------------

ww_install_xinput()
{
ww_cabextract -d "$WW_TEMP" -L -F '*_xinput_*x86*' "$WW_DX_FEB_PATH"
for x in "$WW_TEMP"/*.cab
do
    ww_cabextract -d "$WW_SYSTEM32" -L -F 'xinput*.dll' "$x"
done
ww_override native xinput1_1
ww_override native xinput1_2
ww_override native xinput1_3
ww_override native xinput9_1_0
}

#---------------------------------------------------------------------------------------

ww_install_xna31()
{
ww_install dotnet20sp2
ww_cd_repo_wine msiexec $WW_UNATTENDED_SLASH_QUIET /i xna31.msi
}

#---------------------------------------------------------------------------------------

ww_install_xvid()
{
ww_install vcrun6
ww_cd_repo_wine xvid.exe --mode unattended --decode_divx 1 --decode_3ivx 1 --decode_other 1
}

#---------------------------------------------------------------------------------------
#                                         START                                          
#---------------------------------------------------------------------------------------

ww_init
WW_WINE_VERSION=$WW_BW
ww_wine_prepare_version
ww_install_wine
ww_create_prefix
for f in $WW_BP
do
    ww_install $f
done
ww_setup
if [ $WW_BW != $WW_AW ]
then
    WW_WINE_VERSION=$WW_AW
    ww_wine_prepare_version
    ww_install_wine
fi
for f in $WW_AP
do
    ww_install $f
done
ww_done
